# $FreeBSD$
# Edson Brandi <ebrandi@FreeBSD.org>, 2019. #zanata
# Edson Brandi <ebrandi@freebsd.org>, 2019.
# Danilo G. Baio <dbaio@FreeBSD.org>, 2019, 2020.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-06-06 11:10-0300\n"
"PO-Revision-Date: 2020-08-01 12:53+0000\n"
"Last-Translator: Danilo G. Baio <dbaio@FreeBSD.org>\n"
"Language-Team: Portuguese (Brazil) <https://translate-dev.freebsd.org/"
"projects/freebsd-doc/boooks_design-44bsd/pt_BR/>\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Generator: Weblate 4.1.1\n"

#. Put one translator per line, in the form NAME <EMAIL>, YEAR1, YEAR2
msgctxt "_"
msgid "translator-credits"
msgstr ""
"Danilo G. Baio, dbaio@FreeBSD.org, 2018\n"
"Lucas Andrade, slucasandrade@protonmail.ch, 2018"

#. (itstool) path: info/title
#: book.translate.xml:6
msgid "The Design and Implementation of the 4.4BSD Operating System"
msgstr "O Design e a Implementação do Sistema Operacional 4.4BSD"

#. (itstool) path: authorgroup/author
#: book.translate.xml:10
msgid ""
"<personname><firstname>Marshall</firstname><othername>Kirk</"
"othername><surname>McKusick</surname></personname>"
msgstr ""
"<personname><firstname>Marshall</firstname><othername>Kirk</"
"othername><surname>McKusick</surname></personname>"

#. (itstool) path: authorgroup/author
#: book.translate.xml:12
msgid ""
"<personname><firstname>Keith</firstname><surname>Bostic</surname></"
"personname>"
msgstr ""
"<personname><firstname>Keith</firstname><surname>Bostic</surname></"
"personname>"

#. (itstool) path: authorgroup/author
#: book.translate.xml:14
msgid ""
"<personname><firstname>Michael</firstname><othername>J.</"
"othername><surname>Karels</surname></personname>"
msgstr ""
"<personname><firstname>Michael</firstname><othername>J.</"
"othername><surname>Karels</surname></personname>"

#. (itstool) path: authorgroup/author
#: book.translate.xml:16
msgid ""
"<personname><firstname>John</firstname><othername>S.</"
"othername><surname>Quarterman</surname></personname>"
msgstr ""
"<personname><firstname>John</firstname><othername>S.</"
"othername><surname>Quarterman</surname></personname>"

#. (itstool) path: info/copyright
#: book.translate.xml:19
msgid "<year>1996</year> <holder>Addison-Wesley Longman, Inc</holder>"
msgstr "<year>1996</year> <holder>Addison-Wesley Longman, Inc</holder>"

#. (itstool) path: legalnotice/para
#: book.translate.xml:27
msgid ""
"The second chapter of the book, <citetitle>The Design and Implementation of "
"the 4.4BSD Operating System</citetitle> is excerpted here with the "
"permission of the publisher. No part of it may be further reproduced or "
"distributed without the publisher's express written <link xlink:href="
"\"mailto:peter.gordon@awl.com\">permission</link>. The rest of <link xlink:"
"href=\"http://cseng.aw.com/catalog/academic/product/0,1144,0201549794,00.html"
"\">the book</link> explores the concepts introduced in this chapter in "
"incredible detail and is an excellent reference for anyone with an interest "
"in BSD UNIX. More information about this book is available from the "
"publisher, with whom you can also sign up to receive news of <link xlink:"
"href=\"mailto:curt.johnson@awl.com\">related titles</link>. Information "
"about <link xlink:href=\"http://www.mckusick.com/courses/\">BSD courses</"
"link> is available from Kirk McKusick."
msgstr ""
"The second chapter of the book, <citetitle>The Design and Implementation of "
"the 4.4BSD Operating System</citetitle> is excerpted here with the "
"permission of the publisher. No part of it may be further reproduced or "
"distributed without the publisher's express written <link xlink:href="
"\"mailto:peter.gordon@awl.com\">permission</link>. The rest of <link xlink:"
"href=\"http://cseng.aw.com/catalog/academic/product/0,1144,0201549794,00.html"
"\">the book</link> explores the concepts introduced in this chapter in "
"incredible detail and is an excellent reference for anyone with an interest "
"in BSD UNIX. More information about this book is available from the "
"publisher, with whom you can also sign up to receive news of <link xlink:"
"href=\"mailto:curt.johnson@awl.com\">related titles</link>. Information "
"about <link xlink:href=\"http://www.mckusick.com/courses/\">BSD courses</"
"link> is available from Kirk McKusick."

#. (itstool) path: info/releaseinfo
#: book.translate.xml:44
msgid ""
"$FreeBSD: head/en_US.ISO8859-1/books/design-44bsd/book.xml 44677 2014-04-28 "
"19:36:49Z wblock $"
msgstr ""
"$FreeBSD: head/en_US.ISO8859-1/books/design-44bsd/book.xml 44677 2014-04-28 "
"19:36:49Z wblock $"

#. (itstool) path: chapter/title
#: book.translate.xml:48
msgid "Design Overview of 4.4BSD"
msgstr "Visão geral do Design do 4.4BSD"

#. (itstool) path: sect1/title
#: book.translate.xml:51
msgid "4.4BSD Facilities and the Kernel"
msgstr "O kernel e as facilidades do 4.4BSD"

#. (itstool) path: sect1/para
#: book.translate.xml:53
msgid ""
"The 4.4BSD kernel provides four basic facilities: processes, a filesystem, "
"communications, and system startup. This section outlines where each of "
"these four basic services is described in this book."
msgstr ""
"O kernel 4.4BSD fornece quatro recursos básicos: processos, um sistema de "
"arquivos, comunicações e inicialização do sistema. Esta seção descreve onde "
"cada um desses quatro serviços básicos é descrito neste livro."

#. (itstool) path: listitem/para
#: book.translate.xml:63
msgid ""
"Processes constitute a thread of control in an address space. Mechanisms for "
"creating, terminating, and otherwise controlling processes are described in "
"Chapter 4. The system multiplexes separate virtual-address spaces for each "
"process; this memory management is discussed in Chapter 5."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:74
msgid ""
"The user interface to the filesystem and devices is similar; common aspects "
"are discussed in Chapter 6. The filesystem is a set of named files, "
"organized in a tree-structured hierarchy of directories, and of operations "
"to manipulate them, as presented in Chapter 7. Files reside on physical "
"media such as disks. 4.4BSD supports several organizations of data on the "
"disk, as set forth in Chapter 8. Access to files on remote machines is the "
"subject of Chapter 9. Terminals are used to access the system; their "
"operation is the subject of Chapter 10."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:93
msgid ""
"Communication mechanisms provided by traditional UNIX systems include "
"simplex reliable byte streams between related processes (see pipes, Section "
"11.1), and notification of exceptional events (see signals, Section 4.7). "
"4.4BSD also has a general interprocess-communication facility. This "
"facility, described in Chapter 11, uses access mechanisms distinct from "
"those of the filesystem, but, once a connection is set up, a process can "
"access it as though it were a pipe. There is a general networking framework, "
"discussed in Chapter 12, that is normally used as a layer underlying the IPC "
"facility. Chapter 13 describes a particular networking implementation in "
"detail."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:115
msgid ""
"Any real operating system has operational issues, such as how to start it "
"running. Startup and operational issues are described in Chapter 14."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:122
msgid ""
"Sections 2.3 through 2.14 present introductory material related to Chapters "
"3 through 14. We shall define terms, mention basic system calls, and explore "
"historical developments. Finally, we shall give the reasons for many major "
"design decisions."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:129
msgid "The Kernel"
msgstr "O Kernel"

#. (itstool) path: sect2/para
#: book.translate.xml:131
msgid ""
"The <emphasis>kernel</emphasis> is the part of the system that runs in "
"protected mode and mediates access by all user programs to the underlying "
"hardware (e.g., CPU, disks, terminals, network links) and software "
"constructs (e.g., filesystem, network protocols). The kernel provides the "
"basic system facilities; it creates and manages processes, and provides "
"functions to access the filesystem and communication facilities. These "
"functions, called <emphasis>system calls</emphasis> appear to user processes "
"as library subroutines. These system calls are the only interface that "
"processes have to these facilities. Details of the system-call mechanism are "
"given in Chapter 3, as are descriptions of several kernel mechanisms that do "
"not execute as the direct result of a process doing a system call."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:153
msgid ""
"A <emphasis>kernel</emphasis> in traditional operating-system terminology, "
"is a small nucleus of software that provides only the minimal facilities "
"necessary for implementing additional operating-system services. In "
"contemporary research operating systems -- such as Chorus <xref linkend="
"\"biblio-rozier\"/>, Mach <xref linkend=\"biblio-accetta\"/>, Tunis <xref "
"linkend=\"biblio-ewens\"/>, and the V Kernel <xref linkend=\"biblio-cheriton"
"\"/> -- this division of functionality is more than just a logical one. "
"Services such as filesystems and networking protocols are implemented as "
"client application processes of the nucleus or kernel."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:173
msgid ""
"The 4.4BSD kernel is not partitioned into multiple processes. This basic "
"design decision was made in the earliest versions of UNIX. The first two "
"implementations by Ken Thompson had no memory mapping, and thus made no "
"hardware-enforced distinction between user and kernel space <xref linkend="
"\"biblio-ritchie\"/>. A message-passing system could have been implemented "
"as readily as the actually implemented model of kernel and user processes. "
"The monolithic kernel was chosen for simplicity and performance. And the "
"early kernels were small; the inclusion of facilities such as networking "
"into the kernel has increased its size. The current trend in operating-"
"systems research is to reduce the kernel size by placing such services in "
"user space."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:191
msgid ""
"Users ordinarily interact with the system through a command-language "
"interpreter, called a <emphasis>shell</emphasis>, and perhaps through "
"additional user application programs. Such programs and the shell are "
"implemented with processes. Details of such programs are beyond the scope of "
"this book, which instead concentrates almost exclusively on the kernel."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:199
msgid ""
"Sections 2.3 and 2.4 describe the services provided by the 4.4BSD kernel, "
"and give an overview of the latter's design. Later chapters describe the "
"detailed design and implementation of these services as they appear in "
"4.4BSD."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:208
msgid "Kernel Organization"
msgstr "Organização do Kernel"

#. (itstool) path: sect1/para
#: book.translate.xml:210
msgid ""
"In this section, we view the organization of the 4.4BSD kernel in two ways:"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:215
msgid ""
"As a static body of software, categorized by the functionality offered by "
"the modules that make up the kernel"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:221
msgid ""
"By its dynamic operation, categorized according to the services provided to "
"users"
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:226
msgid ""
"The largest part of the kernel implements the system services that "
"applications access through system calls. In 4.4BSD, this software has been "
"organized according to the following:"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:232
msgid ""
"Basic kernel facilities: timer and system-clock handling, descriptor "
"management, and process management"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:238
#, fuzzy
msgid "Memory-management support: paging and swapping"
msgstr "Suporte de gerenciamento de memória: paginação e troca"

#. (itstool) path: listitem/para
#: book.translate.xml:243
msgid ""
"Generic system interfaces: the I/O, control, and multiplexing operations "
"performed on descriptors"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:249
msgid ""
"The filesystem: files, directories, pathname translation, file locking, and "
"I/O buffer management"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:255
msgid ""
"Terminal-handling support: the terminal-interface driver and terminal line "
"disciplines"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:261
#, fuzzy
msgid "Interprocess-communication facilities: sockets"
msgstr "Instalações de comunicação entre processos: soquetes"

#. (itstool) path: listitem/para
#: book.translate.xml:266
msgid ""
"Support for network communication: communication protocols and generic "
"network facilities, such as routing"
msgstr ""

#. (itstool) path: table/title
#: book.translate.xml:273
#, fuzzy
msgid "Machine-independent software in the 4.4BSD kernel"
msgstr "Software independente de máquina no kernel 4.4BSD"

#. (itstool) path: row/entry
#: book.translate.xml:277 book.translate.xml:457
#, fuzzy
msgid "Category"
msgstr "Categoria"

#. (itstool) path: row/entry
#: book.translate.xml:278 book.translate.xml:458
#, fuzzy
msgid "Lines of code"
msgstr "Linhas de código"

#. (itstool) path: row/entry
#: book.translate.xml:279 book.translate.xml:459
#, fuzzy
msgid "Percentage of kernel"
msgstr "Porcentagem do kernel"

#. (itstool) path: row/entry
#: book.translate.xml:285
#, fuzzy
msgid "total machine independent"
msgstr "total independente da máquina"

#. (itstool) path: row/entry
#: book.translate.xml:286
#, fuzzy
msgid "162,617"
msgstr "162,617"

#. (itstool) path: row/entry
#: book.translate.xml:287
#, fuzzy
msgid "80.4"
msgstr "80,4"

#. (itstool) path: row/entry
#: book.translate.xml:293
#, fuzzy
msgid "headers"
msgstr "cabeçalhos"

#. (itstool) path: row/entry
#: book.translate.xml:294
#, fuzzy
msgid "9,393"
msgstr "9.393"

#. (itstool) path: row/entry
#: book.translate.xml:295
#, fuzzy
msgid "4.6"
msgstr "4,6"

#. (itstool) path: row/entry
#: book.translate.xml:299
#, fuzzy
msgid "initialization"
msgstr "inicialização"

#. (itstool) path: row/entry
#: book.translate.xml:300
#, fuzzy
msgid "1,107"
msgstr "1,107"

#. (itstool) path: row/entry
#: book.translate.xml:301
#, fuzzy
msgid "0.6"
msgstr "0,6"

#. (itstool) path: row/entry
#: book.translate.xml:305
#, fuzzy
msgid "kernel facilities"
msgstr "instalações do kernel"

#. (itstool) path: row/entry
#: book.translate.xml:306
#, fuzzy
msgid "8,793"
msgstr "8.793"

#. (itstool) path: row/entry
#: book.translate.xml:307
#, fuzzy
msgid "4.4"
msgstr "4,4"

#. (itstool) path: row/entry
#: book.translate.xml:311
#, fuzzy
msgid "generic interfaces"
msgstr "interfaces genéricas"

#. (itstool) path: row/entry
#: book.translate.xml:312
#, fuzzy
msgid "4,782"
msgstr "4,782"

#. (itstool) path: row/entry
#: book.translate.xml:313
#, fuzzy
msgid "2.4"
msgstr "2,4"

#. (itstool) path: row/entry
#: book.translate.xml:317
#, fuzzy
msgid "interprocess communication"
msgstr "comunicação entre processos"

#. (itstool) path: row/entry
#: book.translate.xml:318
#, fuzzy
msgid "4,540"
msgstr "4,540"

#. (itstool) path: row/entry
#: book.translate.xml:319 book.translate.xml:349
#, fuzzy
msgid "2.2"
msgstr "2,2"

#. (itstool) path: row/entry
#: book.translate.xml:323
#, fuzzy
msgid "terminal handling"
msgstr "terminal de manipulaçao"

#. (itstool) path: row/entry
#: book.translate.xml:324
#, fuzzy
msgid "3,911"
msgstr "3.911"

#. (itstool) path: row/entry
#: book.translate.xml:325
#, fuzzy
msgid "1.9"
msgstr "1,9"

#. (itstool) path: row/entry
#: book.translate.xml:329 book.translate.xml:491
#, fuzzy
msgid "virtual memory"
msgstr "memória virtual"

#. (itstool) path: row/entry
#: book.translate.xml:330
#, fuzzy
msgid "11,813"
msgstr "11,813"

#. (itstool) path: row/entry
#: book.translate.xml:331
#, fuzzy
msgid "5.8"
msgstr "5,8"

#. (itstool) path: row/entry
#: book.translate.xml:335
#, fuzzy
msgid "vnode management"
msgstr "gerenciamento de vnode"

#. (itstool) path: row/entry
#: book.translate.xml:336
#, fuzzy
msgid "7,954"
msgstr "7,954"

#. (itstool) path: row/entry
#: book.translate.xml:337
#, fuzzy
msgid "3.9"
msgstr "3,9"

#. (itstool) path: row/entry
#: book.translate.xml:341
#, fuzzy
msgid "filesystem naming"
msgstr "nomeação de sistema de arquivos"

#. (itstool) path: row/entry
#: book.translate.xml:342
#, fuzzy
msgid "6,550"
msgstr "6,550"

#. (itstool) path: row/entry
#: book.translate.xml:343
#, fuzzy
msgid "3.2"
msgstr "3,2"

#. (itstool) path: row/entry
#: book.translate.xml:347
#, fuzzy
msgid "fast filestore"
msgstr "fast filestore"

#. (itstool) path: row/entry
#: book.translate.xml:348
#, fuzzy
msgid "4,365"
msgstr "4,365"

#. (itstool) path: row/entry
#: book.translate.xml:353
#, fuzzy
msgid "log-structure filestore"
msgstr "log-estrutura filestore"

#. (itstool) path: row/entry
#: book.translate.xml:354
#, fuzzy
msgid "4,337"
msgstr "4,337"

#. (itstool) path: row/entry
#: book.translate.xml:355 book.translate.xml:367
#, fuzzy
msgid "2.1"
msgstr "2,1"

#. (itstool) path: row/entry
#: book.translate.xml:359
#, fuzzy
msgid "memory-based filestore"
msgstr "arquivamento baseado em memória"

#. (itstool) path: row/entry
#: book.translate.xml:360
#, fuzzy
msgid "645"
msgstr "645"

#. (itstool) path: row/entry
#: book.translate.xml:361
#, fuzzy
msgid "0.3"
msgstr "0,3"

#. (itstool) path: row/entry
#: book.translate.xml:365
#, fuzzy
msgid "cd9660 filesystem"
msgstr "sistema de arquivos cd9660"

#. (itstool) path: row/entry
#: book.translate.xml:366
#, fuzzy
msgid "4,177"
msgstr "4,177"

#. (itstool) path: row/entry
#: book.translate.xml:371
#, fuzzy
msgid "miscellaneous filesystems (10)"
msgstr "sistemas de arquivos diversos (10)"

#. (itstool) path: row/entry
#: book.translate.xml:372
#, fuzzy
msgid "12,695"
msgstr "12,695"

#. (itstool) path: row/entry
#: book.translate.xml:373
#, fuzzy
msgid "6.3"
msgstr "6,3"

#. (itstool) path: row/entry
#: book.translate.xml:377
#, fuzzy
msgid "network filesystem"
msgstr "sistema de arquivos de rede"

#. (itstool) path: row/entry
#: book.translate.xml:378
#, fuzzy
msgid "17,199"
msgstr "17.199"

#. (itstool) path: row/entry
#: book.translate.xml:379
#, fuzzy
msgid "8.5"
msgstr "8,5"

#. (itstool) path: row/entry
#: book.translate.xml:383
#, fuzzy
msgid "network communication"
msgstr "comunicação de rede"

#. (itstool) path: row/entry
#: book.translate.xml:384
#, fuzzy
msgid "8,630"
msgstr "8,630"

#. (itstool) path: row/entry
#: book.translate.xml:385
#, fuzzy
msgid "4.3"
msgstr "4,3"

#. (itstool) path: row/entry
#: book.translate.xml:389
#, fuzzy
msgid "internet protocols"
msgstr "protocolos de internet"

#. (itstool) path: row/entry
#: book.translate.xml:390
#, fuzzy
msgid "11,984"
msgstr "11,984"

#. (itstool) path: row/entry
#: book.translate.xml:391
#, fuzzy
msgid "5.9"
msgstr "5,9"

#. (itstool) path: row/entry
#: book.translate.xml:395
#, fuzzy
msgid "ISO protocols"
msgstr "Protocolos ISO"

#. (itstool) path: row/entry
#: book.translate.xml:396
#, fuzzy
msgid "23,924"
msgstr "23.924"

#. (itstool) path: row/entry
#: book.translate.xml:397
#, fuzzy
msgid "11.8"
msgstr "11,8"

#. (itstool) path: row/entry
#: book.translate.xml:401
#, fuzzy
msgid "X.25 protocols"
msgstr "Protocolos X.25"

#. (itstool) path: row/entry
#: book.translate.xml:402
#, fuzzy
msgid "10,626"
msgstr "10,626"

#. (itstool) path: row/entry
#: book.translate.xml:403
#, fuzzy
msgid "5.3"
msgstr "5,3"

#. (itstool) path: row/entry
#: book.translate.xml:407
#, fuzzy
msgid "XNS protocols"
msgstr "Protocolos XNS"

#. (itstool) path: row/entry
#: book.translate.xml:408
#, fuzzy
msgid "5,192"
msgstr "5,192"

#. (itstool) path: row/entry
#: book.translate.xml:409
#, fuzzy
msgid "2.6"
msgstr "2,6"

#. (itstool) path: sect1/para
#: book.translate.xml:415
msgid ""
"Most of the software in these categories is machine independent and is "
"portable across different hardware architectures."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:418
msgid ""
"The machine-dependent aspects of the kernel are isolated from the mainstream "
"code. In particular, none of the machine-independent code contains "
"conditional code for specific architecture. When an architecture-dependent "
"action is needed, the machine-independent code calls an architecture-"
"dependent function that is located in the machine-dependent code. The "
"software that is machine dependent includes"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:429
#, fuzzy
msgid "Low-level system-startup actions"
msgstr "Ações de inicialização do sistema de baixo nível"

#. (itstool) path: listitem/para
#: book.translate.xml:433
#, fuzzy
msgid "Trap and fault handling"
msgstr "Armadilha e tratamento de falhas"

#. (itstool) path: listitem/para
#: book.translate.xml:437
#, fuzzy
msgid "Low-level manipulation of the run-time context of a process"
msgstr ""
"Manipulação de baixo nível do contexto de tempo de execução de um processo"

#. (itstool) path: listitem/para
#: book.translate.xml:442
#, fuzzy
msgid "Configuration and initialization of hardware devices"
msgstr "Configuração e inicialização de dispositivos de hardware"

#. (itstool) path: listitem/para
#: book.translate.xml:446
#, fuzzy
msgid "Run-time support for I/O devices"
msgstr "Suporte de tempo de execução para dispositivos de E / S"

#. (itstool) path: table/title
#: book.translate.xml:451
#, fuzzy
msgid "Machine-dependent software for the HP300 in the 4.4BSD kernel"
msgstr "Software dependente da máquina para o HP300 no kernel 4.4BSD"

#. (itstool) path: row/entry
#: book.translate.xml:465
#, fuzzy
msgid "total machine dependent"
msgstr "total dependente da máquina"

#. (itstool) path: row/entry
#: book.translate.xml:466
#, fuzzy
msgid "39,634"
msgstr "39,634"

#. (itstool) path: row/entry
#: book.translate.xml:467
#, fuzzy
msgid "19.6"
msgstr "19,6"

#. (itstool) path: row/entry
#: book.translate.xml:473
#, fuzzy
msgid "machine dependent headers"
msgstr "cabeçalhos dependentes da máquina"

#. (itstool) path: row/entry
#: book.translate.xml:474
#, fuzzy
msgid "1,562"
msgstr "1,562"

#. (itstool) path: row/entry
#: book.translate.xml:475
#, fuzzy
msgid "0.8"
msgstr "0,8"

#. (itstool) path: row/entry
#: book.translate.xml:479
#, fuzzy
msgid "device driver headers"
msgstr "cabeçalhos de driver de dispositivo"

#. (itstool) path: row/entry
#: book.translate.xml:480
#, fuzzy
msgid "3,495"
msgstr "3,495"

#. (itstool) path: row/entry
#: book.translate.xml:481
#, fuzzy
msgid "1.7"
msgstr "1,7"

#. (itstool) path: row/entry
#: book.translate.xml:485
#, fuzzy
msgid "device driver source"
msgstr "fonte do driver de dispositivo"

#. (itstool) path: row/entry
#: book.translate.xml:486
#, fuzzy
msgid "17,506"
msgstr "17.506"

#. (itstool) path: row/entry
#: book.translate.xml:487
#, fuzzy
msgid "8.7"
msgstr "8,7"

#. (itstool) path: row/entry
#: book.translate.xml:492
#, fuzzy
msgid "3,087"
msgstr "3,087"

#. (itstool) path: row/entry
#: book.translate.xml:493 book.translate.xml:505
#, fuzzy
msgid "1.5"
msgstr "1,5"

#. (itstool) path: row/entry
#: book.translate.xml:497
#, fuzzy
msgid "other machine dependent"
msgstr "outro dependente da máquina"

#. (itstool) path: row/entry
#: book.translate.xml:498
#, fuzzy
msgid "6,287"
msgstr "6,287"

#. (itstool) path: row/entry
#: book.translate.xml:499
#, fuzzy
msgid "3.1"
msgstr "3,1"

#. (itstool) path: row/entry
#: book.translate.xml:503
#, fuzzy
msgid "routines in assembly language"
msgstr "rotinas na linguagem assembly"

#. (itstool) path: row/entry
#: book.translate.xml:504
#, fuzzy
msgid "3,014"
msgstr "3,014"

#. (itstool) path: row/entry
#: book.translate.xml:509
#, fuzzy
msgid "HP/UX compatibility"
msgstr "Compatibilidade com HP / UX"

#. (itstool) path: row/entry
#: book.translate.xml:510
#, fuzzy
msgid "4,683"
msgstr "4,683"

#. (itstool) path: row/entry
#: book.translate.xml:511
#, fuzzy
msgid "2.3"
msgstr "2,3"

#. (itstool) path: sect1/para
#: book.translate.xml:517
msgid ""
"<xref linkend=\"table-mach-indep\"/> summarizes the machine-independent "
"software that constitutes the 4.4BSD kernel for the HP300. The numbers in "
"column 2 are for lines of C source code, header files, and assembly "
"language. Virtually all the software in the kernel is written in the C "
"programming language; less than 2 percent is written in assembly language. "
"As the statistics in <xref linkend=\"table-mach-dep\"/> show, the machine-"
"dependent software, excluding HP/UX and device support, accounts for a "
"minuscule 6.9 percent of the kernel."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:531
msgid ""
"Only a small part of the kernel is devoted to initializing the system. This "
"code is used when the system is <emphasis>bootstrapped</emphasis> into "
"operation and is responsible for setting up the kernel hardware and software "
"environment (see Chapter 14). Some operating systems (especially those with "
"limited physical memory) discard or <emphasis>overlay</emphasis> the "
"software that performs these functions after that software has been "
"executed. The 4.4BSD kernel does not reclaim the memory used by the startup "
"code because that memory space is barely 0.5 percent of the kernel resources "
"used on a typical machine. Also, the startup code does not appear in one "
"place in the kernel -- it is scattered throughout, and it usually appears in "
"places logically associated with what is being initialized."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:553
#, fuzzy
msgid "Kernel Services"
msgstr "Serviços do Kernel"

#. (itstool) path: sect1/para
#: book.translate.xml:555
msgid ""
"The boundary between the kernel- and user-level code is enforced by hardware-"
"protection facilities provided by the underlying hardware. The kernel "
"operates in a separate address space that is inaccessible to user processes. "
"Privileged operations -- such as starting I/O and halting the central "
"processing unit (CPU) -- are available to only the kernel. Applications "
"request services from the kernel with <emphasis>system calls</emphasis>. "
"System calls are used to cause the kernel to execute complicated operations, "
"such as writing data to secondary storage, and simple operations, such as "
"returning the current time of day. All system calls appear "
"<emphasis>synchronous</emphasis> to applications: The application does not "
"run while the kernel does the actions associated with a system call. The "
"kernel may finish some operations associated with a system call after it has "
"returned. For example, a <emphasis>write</emphasis> system call will copy "
"the data to be written from the user process to a kernel buffer while the "
"process waits, but will usually return from the system call before the "
"kernel buffer is written to the disk."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:582
msgid ""
"A system call usually is implemented as a hardware trap that changes the "
"CPU's execution mode and the current address-space mapping. Parameters "
"supplied by users in system calls are validated by the kernel before being "
"used. Such checking ensures the integrity of the system. All parameters "
"passed into the kernel are copied into the kernel's address space, to ensure "
"that validated parameters are not changed as a side effect of the system "
"call. System-call results are returned by the kernel, either in hardware "
"registers or by their values being copied to user-specified memory "
"addresses. Like parameters passed into the kernel, addresses used for the "
"return of results must be validated to ensure that they are part of an "
"application's address space. If the kernel encounters an error while "
"processing a system call, it returns an error code to the user. For the C "
"programming language, this error code is stored in the global variable "
"<emphasis>errno</emphasis>, and the function that executed the system call "
"returns the value -1."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:607
msgid ""
"User applications and the kernel operate independently of each other. 4.4BSD "
"does not store I/O control blocks or other operating-system-related data "
"structures in the application's address space. Each user-level application "
"is provided an independent address space in which it executes. The kernel "
"makes most state changes, such as suspending a process while another is "
"running, invisible to the processes involved."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:620
#, fuzzy
msgid "Process Management"
msgstr "Gerenciamento de processos"

#. (itstool) path: sect1/para
#: book.translate.xml:622
msgid ""
"4.4BSD supports a multitasking environment. Each task or thread of execution "
"is termed a <emphasis>process</emphasis>. The <emphasis>context</emphasis> "
"of a 4.4BSD process consists of user-level state, including the contents of "
"its address space and the run-time environment, and kernel-level state, "
"which includes scheduling parameters, resource controls, and identification "
"information. The context includes everything used by the kernel in providing "
"services for the process. Users can create processes, control the processes' "
"execution, and receive notification when the processes' execution status "
"changes. Every process is assigned a unique value, termed a "
"<emphasis>process identifier</emphasis> (PID). This value is used by the "
"kernel to identify a process when reporting status changes to a user, and by "
"a user when referencing a process in a system call."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:645
msgid ""
"The kernel creates a process by duplicating the context of another process. "
"The new process is termed a <emphasis>child process</emphasis> of the "
"original <emphasis>parent process</emphasis> The context duplicated in "
"process creation includes both the user-level execution state of the process "
"and the process's system state managed by the kernel. Important components "
"of the kernel state are described in Chapter 4."
msgstr ""

#. (itstool) path: figure/title
#: book.translate.xml:657
#, fuzzy
msgid "Process lifecycle"
msgstr "Ciclo de vida do processo"

#. (itstool) path: imageobject/imagedata
#. This is a reference to an external file such as an image or video. When
#. the file changes, the md5 hash will change to let you know you need to
#. update your localized copy. The msgstr is not used at all. Set it to
#. whatever you like once you have updated your copy of the file.
#: book.translate.xml:661
msgctxt "_"
msgid "external ref='fig1' md5='__failed__'"
msgstr ""

#. (itstool) path: textobject/literallayout
#: book.translate.xml:665
#, no-wrap
msgid ""
"+----------------+               wait               +----------------+\n"
"| parent process |---------------------------------&gt;| parent process |---&gt;\n"
"+----------------+                                  +----------------+\n"
"        |                                                   ^\n"
"        | fork                                              |\n"
"        V                                                   |\n"
"+----------------+ execve +----------------+  wait  +----------------+\n"
"|  child process |-------&gt;|  child process |-------&gt;| zombie process |\n"
"+----------------+        +----------------+        +----------------+"
msgstr ""

#. (itstool) path: figure/mediaobject
#: book.translate.xml:659
msgid ""
"<imageobject> <imagedata fileref=\"fig1\"/> </imageobject> <textobject> <_:"
"literallayout-1/> </textobject> <textobject> <phrase>Process-management "
"system calls</phrase> </textobject>"
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:682
msgid ""
"The process lifecycle is depicted in <xref linkend=\"fig-process-lifecycle\"/"
">. A process may create a new process that is a copy of the original by "
"using the <emphasis>fork</emphasis> system call. The <emphasis>fork</"
"emphasis> call returns twice: once in the parent process, where the return "
"value is the process identifier of the child, and once in the child process, "
"where the return value is 0. The parent-child relationship induces a "
"hierarchical structure on the set of processes in the system. The new "
"process shares all its parent's resources, such as file descriptors, signal-"
"handling status, and memory layout."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:697
msgid ""
"Although there are occasions when the new process is intended to be a copy "
"of the parent, the loading and execution of a different program is a more "
"useful and typical action. A process can overlay itself with the memory "
"image of another program, passing to the newly created image a set of "
"parameters, using the system call <emphasis>execve</emphasis>. One parameter "
"is the name of a file whose contents are in a format recognized by the "
"system -- either a binary-executable file or a file that causes the "
"execution of a specified interpreter program to process its contents."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:710
msgid ""
"A process may terminate by executing an <emphasis>exit</emphasis> system "
"call, sending 8 bits of exit status to its parent. If a process wants to "
"communicate more than a single byte of information with its parent, it must "
"either set up an interprocess-communication channel using pipes or sockets, "
"or use an intermediate file. Interprocess communication is discussed "
"extensively in Chapter 11."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:722
msgid ""
"A process can suspend execution until any of its child processes terminate "
"using the <emphasis>wait</emphasis> system call, which returns the PID and "
"exit status of the terminated child process. A parent process can arrange to "
"be notified by a signal when a child process exits or terminates abnormally. "
"Using the <emphasis>wait4</emphasis> system call, the parent can retrieve "
"information about the event that caused termination of the child process and "
"about resources consumed by the process during its lifetime. If a process is "
"orphaned because its parent exits before it is finished, then the kernel "
"arranges for the child's exit status to be passed back to a special system "
"process <emphasis>init</emphasis>: see Sections 3.1 and 14.6)."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:743
msgid ""
"The details of how the kernel creates and destroys processes are given in "
"Chapter 5."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:746
msgid ""
"Processes are scheduled for execution according to a <emphasis>process-"
"priority</emphasis> parameter. This priority is managed by a kernel-based "
"scheduling algorithm. Users can influence the scheduling of a process by "
"specifying a parameter (<emphasis>nice</emphasis>) that weights the overall "
"scheduling priority, but are still obligated to share the underlying CPU "
"resources according to the kernel's scheduling policy."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:759
#, fuzzy
msgid "Signals"
msgstr "Sinais"

#. (itstool) path: sect2/para
#: book.translate.xml:761
msgid ""
"The system defines a set of <emphasis>signals</emphasis> that may be "
"delivered to a process. Signals in 4.4BSD are modeled after hardware "
"interrupts. A process may specify a user-level subroutine to be a "
"<emphasis>handler</emphasis> to which a signal should be delivered. When a "
"signal is generated, it is blocked from further occurrence while it is being "
"<emphasis>caught</emphasis> by the handler. Catching a signal involves "
"saving the current process context and building a new one in which to run "
"the handler. The signal is then delivered to the handler, which can either "
"abort the process or return to the executing process (perhaps after setting "
"a global variable). If the handler returns, the signal is unblocked and can "
"be generated (and caught) again."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:780
msgid ""
"Alternatively, a process may specify that a signal is to be "
"<emphasis>ignored</emphasis>, or that a default action, as determined by the "
"kernel, is to be taken. The default action of certain signals is to "
"terminate the process. This termination may be accompanied by creation of a "
"<emphasis>core file</emphasis> that contains the current memory image of the "
"process for use in postmortem debugging."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:789
msgid ""
"Some signals cannot be caught or ignored. These signals include "
"<emphasis>SIGKILL</emphasis>, which kills runaway processes, and the job-"
"control signal <emphasis>SIGSTOP</emphasis>."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:797
msgid ""
"A process may choose to have signals delivered on a special stack so that "
"sophisticated software stack manipulations are possible. For example, a "
"language supporting coroutines needs to provide a stack for each coroutine. "
"The language run-time system can allocate these stacks by dividing up the "
"single stack provided by 4.4BSD. If the kernel does not support a separate "
"signal stack, the space allocated for each coroutine must be expanded by the "
"amount of space required to catch a signal."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:808
msgid ""
"All signals have the same <emphasis>priority</emphasis>. If multiple signals "
"are pending simultaneously, the order in which signals are delivered to a "
"process is implementation specific. Signal handlers execute with the signal "
"that caused their invocation to be blocked, but other signals may yet occur. "
"Mechanisms are provided so that processes can protect critical sections of "
"code against the occurrence of specified signals."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:816
msgid ""
"The detailed design and implementation of signals is described in Section "
"4.7."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:821
#, fuzzy
msgid "Process Groups and Sessions"
msgstr "Processar Grupos e Sessões"

#. (itstool) path: sect2/para
#: book.translate.xml:823
msgid ""
"Processes are organized into <emphasis>process groups</emphasis>. Process "
"groups are used to control access to terminals and to provide a means of "
"distributing signals to collections of related processes. A process inherits "
"its process group from its parent process. Mechanisms are provided by the "
"kernel to allow a process to alter its process group or the process group of "
"its descendents. Creating a new process group is easy; the value of a new "
"process group is ordinarily the process identifier of the creating process."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:835
msgid ""
"The group of processes in a process group is sometimes referred to as a "
"<emphasis>job</emphasis> and is manipulated by high-level system software, "
"such as the shell. A common kind of job created by a shell is a "
"<emphasis>pipeline</emphasis> of several processes connected by pipes, such "
"that the output of the first process is the input of the second, the output "
"of the second is the input of the third, and so forth. The shell creates "
"such a job by forking a process for each stage of the pipeline, then putting "
"all those processes into a separate process group."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:848
msgid ""
"A user process can send a signal to each process in a process group, as well "
"as to a single process. A process in a specific process group may receive "
"software interrupts affecting the group, causing the group to suspend or "
"resume execution, or to be interrupted or terminated."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:854
msgid ""
"A terminal has a process-group identifier assigned to it. This identifier is "
"normally set to the identifier of a process group associated with the "
"terminal. A job-control shell may create a number of process groups "
"associated with the same terminal; the terminal is the <emphasis>controlling "
"terminal</emphasis> for each process in these groups. A process may read "
"from a descriptor for its controlling terminal only if the terminal's "
"process-group identifier matches that of the process. If the identifiers do "
"not match, the process will be blocked if it attempts to read from the "
"terminal. By changing the process-group identifier of the terminal, a shell "
"can arbitrate a terminal among several different jobs. This arbitration is "
"called <emphasis>job control</emphasis> and is described, with process "
"groups, in Section 4.8."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:873
msgid ""
"Just as a set of related processes can be collected into a process group, a "
"set of process groups can be collected into a <emphasis>session</emphasis>. "
"The main uses for sessions are to create an isolated environment for a "
"daemon process and its children, and to collect together a user's login "
"shell and the jobs that that shell spawns."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:884
#, fuzzy
msgid "Memory Management"
msgstr "Gerenciamento de Memória"

#. (itstool) path: sect1/para
#: book.translate.xml:886
msgid ""
"Each process has its own private address space. The address space is "
"initially divided into three logical segments: <emphasis>text</emphasis>, "
"<emphasis>data</emphasis>, and <emphasis>stack</emphasis>. The text segment "
"is read-only and contains the machine instructions of a program. The data "
"and stack segments are both readable and writable. The data segment contains "
"the initialized and uninitialized data portions of a program, whereas the "
"stack segment holds the application's run-time stack. On most machines, the "
"stack segment is extended automatically by the kernel as the process "
"executes. A process can expand or contract its data segment by making a "
"system call, whereas a process can change the size of its text segment only "
"when the segment's contents are overlaid with data from the filesystem, or "
"when debugging takes place. The initial contents of the segments of a child "
"process are duplicates of the segments of a parent process."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:907
msgid ""
"The entire contents of a process address space do not need to be resident "
"for a process to execute. If a process references a part of its address "
"space that is not resident in main memory, the system <emphasis>pages</"
"emphasis> the necessary information into memory. When system resources are "
"scarce, the system uses a two-level approach to maintain available "
"resources. If a modest amount of memory is available, the system will take "
"memory resources away from processes if these resources have not been used "
"recently. Should there be a severe resource shortage, the system will resort "
"to <emphasis>swapping</emphasis> the entire context of a process to "
"secondary storage. The <emphasis>demand paging</emphasis> and "
"<emphasis>swapping</emphasis> done by the system are effectively transparent "
"to processes. A process may, however, advise the system about expected "
"future memory utilization as a performance aid."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:930
#, fuzzy
msgid "BSD Memory-Management Design Decisions"
msgstr "Decisões de Design de Gerenciamento de Memória BSD"

#. (itstool) path: sect2/para
#: book.translate.xml:932
msgid ""
"The support of large sparse address spaces, mapped files, and shared memory "
"was a requirement for 4.2BSD. An interface was specified, called "
"<emphasis>mmap</emphasis>, that allowed unrelated processes to request a "
"shared mapping of a file into their address spaces. If multiple processes "
"mapped the same file into their address spaces, changes to the file's "
"portion of an address space by one process would be reflected in the area "
"mapped by the other processes, as well as in the file itself. Ultimately, "
"4.2BSD was shipped without the <emphasis>mmap</emphasis> interface, because "
"of pressure to make other features, such as networking, available."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:947
msgid ""
"Further development of the <emphasis>mmap</emphasis> interface continued "
"during the work on 4.3BSD. Over 40 companies and research groups "
"participated in the discussions leading to the revised architecture that was "
"described in the Berkeley Software Architecture Manual <xref linkend="
"\"biblio-mckusick-1\"/>. Several of the companies have implemented the "
"revised interface <xref linkend=\"biblio-gingell\"/>."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:957
msgid ""
"Once again, time pressure prevented 4.3BSD from providing an implementation "
"of the interface. Although the latter could have been built into the "
"existing 4.3BSD virtual-memory system, the developers decided not to put it "
"in because that implementation was nearly 10 years old. Furthermore, the "
"original virtual-memory design was based on the assumption that computer "
"memories were small and expensive, whereas disks were locally connected, "
"fast, large, and inexpensive. Thus, the virtual-memory system was designed "
"to be frugal with its use of memory at the expense of generating extra disk "
"traffic. In addition, the 4.3BSD implementation was riddled with VAX memory-"
"management hardware dependencies that impeded its portability to other "
"computer architectures. Finally, the virtual-memory system was not designed "
"to support the tightly coupled multiprocessors that are becoming "
"increasingly common and important today."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:979
msgid ""
"Attempts to improve the old implementation incrementally seemed doomed to "
"failure. A completely new design, on the other hand, could take advantage of "
"large memories, conserve disk transfers, and have the potential to run on "
"multiprocessors. Consequently, the virtual-memory system was completely "
"replaced in 4.4BSD. The 4.4BSD virtual-memory system is based on the Mach "
"2.0 VM system <xref linkend=\"biblio-tevanian\"/>. with updates from Mach "
"2.5 and Mach 3.0. It features efficient support for sharing, a clean "
"separation of machine-independent and machine-dependent features, as well as "
"(currently unused) multiprocessor support. Processes can map files anywhere "
"in their address space. They can share parts of their address space by doing "
"a shared mapping of the same file. Changes made by one process are visible "
"in the address space of the other process, and also are written back to the "
"file itself. Processes can also request private mappings of a file, which "
"prevents any changes that they make from being visible to other processes "
"mapping the file or being written back to the file itself."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1004
msgid ""
"Another issue with the virtual-memory system is the way that information is "
"passed into the kernel when a system call is made. 4.4BSD always copies data "
"from the process address space into a buffer in the kernel. For read or "
"write operations that are transferring large quantities of data, doing the "
"copy can be time consuming. An alternative to doing the copying is to remap "
"the process memory into the kernel. The 4.4BSD kernel always copies the data "
"for several reasons:"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1017
msgid ""
"Often, the user data are not page aligned and are not a multiple of the "
"hardware page length."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1022
msgid ""
"If the page is taken away from the process, it will no longer be able to "
"reference that page. Some programs depend on the data remaining in the "
"buffer even after those data have been written."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1029
msgid ""
"If the process is allowed to keep a copy of the page (as it is in current "
"4.4BSD semantics), the page must be made <emphasis>copy-on-write</emphasis>. "
"A copy-on-write page is one that is protected against being written by being "
"made read-only. If the process attempts to modify the page, the kernel gets "
"a write fault. The kernel then makes a copy of the page that the process can "
"modify. Unfortunately, the typical process will immediately try to write new "
"data to its output buffer, forcing the data to be copied anyway."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1044
msgid ""
"When pages are remapped to new virtual-memory addresses, most memory-"
"management hardware requires that the hardware address-translation cache be "
"purged selectively. The cache purges are often slow. The net effect is that "
"remapping is slower than copying for blocks of data less than 4 to 8 Kbyte."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1053
msgid ""
"The biggest incentives for memory mapping are the needs for accessing big "
"files and for passing large quantities of data between processes. The "
"<emphasis>mmap</emphasis> interface provides a way for both of these tasks "
"to be done without copying."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:1063
#, fuzzy
msgid "Memory Management Inside the Kernel"
msgstr "Gerenciamento de memória dentro do kernel"

#. (itstool) path: sect2/para
#: book.translate.xml:1065
msgid ""
"The kernel often does allocations of memory that are needed for only the "
"duration of a single system call. In a user process, such short-term memory "
"would be allocated on the run-time stack. Because the kernel has a limited "
"run-time stack, it is not feasible to allocate even moderate-sized blocks of "
"memory on it. Consequently, such memory must be allocated through a more "
"dynamic mechanism. For example, when the system must translate a pathname, "
"it must allocate a 1-Kbyte buffer to hold the name. Other blocks of memory "
"must be more persistent than a single system call, and thus could not be "
"allocated on the stack even if there was space. An example is protocol-"
"control blocks that remain throughout the duration of a network connection."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1081
msgid ""
"Demands for dynamic memory allocation in the kernel have increased as more "
"services have been added. A generalized memory allocator reduces the "
"complexity of writing code inside the kernel. Thus, the 4.4BSD kernel has a "
"single memory allocator that can be used by any part of the system. It has "
"an interface similar to the C library routines <emphasis>malloc</emphasis> "
"and <emphasis>free</emphasis> that provide memory allocation to application "
"programs <xref linkend=\"biblio-mckusick-2\"/>. Like the C library "
"interface, the allocation routine takes a parameter specifying the size of "
"memory that is needed. The range of sizes for memory requests is not "
"constrained; however, physical memory is allocated and is not paged. The "
"free routine takes a pointer to the storage being freed, but does not "
"require the size of the piece of memory being freed."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:1105
#, fuzzy
msgid "I/O System"
msgstr "Sistema I / O"

#. (itstool) path: sect1/para
#: book.translate.xml:1107
msgid ""
"The basic model of the UNIX I/O system is a sequence of bytes that can be "
"accessed either randomly or sequentially. There are no <emphasis>access "
"methods</emphasis> and no <emphasis>control blocks</emphasis> in a typical "
"UNIX user process."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1116
msgid ""
"Different programs expect various levels of structure, but the kernel does "
"not impose structure on I/O. For instance, the convention for text files is "
"lines of ASCII characters separated by a single newline character (the ASCII "
"line-feed character), but the kernel knows nothing about this convention. "
"For the purposes of most programs, the model is further simplified to being "
"a stream of data bytes, or an <emphasis>I/O stream</emphasis>. It is this "
"single common data form that makes the characteristic UNIX tool-based "
"approach work <xref linkend=\"biblio-kernighan\"/>. An I/O stream from one "
"program can be fed as input to almost any other program. (This kind of "
"traditional UNIX I/O stream should not be confused with the Eighth Edition "
"stream I/O system or with the System V, Release 3 STREAMS, both of which can "
"be accessed as traditional I/O streams.)"
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:1142
#, fuzzy
msgid "Descriptors and I/O"
msgstr "Descritores e I / O"

#. (itstool) path: sect2/para
#: book.translate.xml:1144
msgid ""
"UNIX processes use <emphasis>descriptors</emphasis> to reference I/O "
"streams. Descriptors are small unsigned integers obtained from the "
"<emphasis>open</emphasis> and <emphasis>socket</emphasis> system calls. The "
"<emphasis>open</emphasis> system call takes as arguments the name of a file "
"and a permission mode to specify whether the file should be open for reading "
"or for writing, or for both. This system call also can be used to create a "
"new, empty file. A <emphasis>read</emphasis> or <emphasis>write</emphasis> "
"system call can be applied to a descriptor to transfer data. The "
"<emphasis>close</emphasis> system call can be used to deallocate any "
"descriptor."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1168
msgid ""
"Descriptors represent underlying objects supported by the kernel, and are "
"created by system calls specific to the type of object. In 4.4BSD, three "
"kinds of objects can be represented by descriptors: files, pipes, and "
"sockets."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1175
msgid ""
"A <emphasis>file</emphasis> is a linear array of bytes with at least one "
"name. A file exists until all its names are deleted explicitly and no "
"process holds a descriptor for it. A process acquires a descriptor for a "
"file by opening that file's name with the <emphasis>open</emphasis> system "
"call. I/O devices are accessed as files."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1188
msgid ""
"A <emphasis>pipe</emphasis> is a linear array of bytes, as is a file, but it "
"is used solely as an I/O stream, and it is unidirectional. It also has no "
"name, and thus cannot be opened with <emphasis>open</emphasis>. Instead, it "
"is created by the <emphasis>pipe</emphasis> system call, which returns two "
"descriptors, one of which accepts input that is sent to the other descriptor "
"reliably, without duplication, and in order. The system also supports a "
"named pipe or FIFO. A FIFO has properties identical to a pipe, except that "
"it appears in the filesystem; thus, it can be opened using the "
"<emphasis>open</emphasis> system call. Two processes that wish to "
"communicate each open the FIFO: One opens it for reading, the other for "
"writing."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1215
msgid ""
"A <emphasis>socket</emphasis> is a transient object that is used for "
"interprocess communication; it exists only as long as some process holds a "
"descriptor referring to it. A socket is created by the <emphasis>socket</"
"emphasis> system call, which returns a descriptor for it. There are "
"different kinds of sockets that support various communication semantics, "
"such as reliable delivery of data, preservation of message ordering, and "
"preservation of message boundaries."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1230
msgid ""
"In systems before 4.2BSD, pipes were implemented using the filesystem; when "
"sockets were introduced in 4.2BSD, pipes were reimplemented as sockets."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1234
msgid ""
"The kernel keeps for each process a <emphasis>descriptor table</emphasis>, "
"which is a table that the kernel uses to translate the external "
"representation of a descriptor into an internal representation. (The "
"descriptor is merely an index into this table.) The descriptor table of a "
"process is inherited from that process's parent, and thus access to the "
"objects to which the descriptors refer also is inherited. The main ways that "
"a process can obtain a descriptor are by opening or creation of an object, "
"and by inheritance from the parent process. In addition, socket IPC allows "
"passing of descriptors in messages between unrelated processes on the same "
"machine."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1251
msgid ""
"Every valid descriptor has an associated <emphasis>file offset</emphasis> in "
"bytes from the beginning of the object. Read and write operations start at "
"this offset, which is updated after each data transfer. For objects that "
"permit random access, the file offset also may be set with the "
"<emphasis>lseek</emphasis> system call. Ordinary files permit random access, "
"and some devices do, as well. Pipes and sockets do not."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1263
msgid ""
"When a process terminates, the kernel reclaims all the descriptors that were "
"in use by that process. If the process was holding the final reference to an "
"object, the object's manager is notified so that it can do any necessary "
"cleanup actions, such as final deletion of a file or deallocation of a "
"socket."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:1272
#, fuzzy
msgid "Descriptor Management"
msgstr "Gerenciamento de Descritor"

#. (itstool) path: sect2/para
#: book.translate.xml:1274
msgid ""
"Most processes expect three descriptors to be open already when they start "
"running. These descriptors are 0, 1, 2, more commonly known as "
"<emphasis>standard input</emphasis>, <emphasis>standard output</emphasis>, "
"and <emphasis>standard error</emphasis>, respectively. Usually, all three "
"are associated with the user's terminal by the login process (see Section "
"14.6) and are inherited through <emphasis>fork</emphasis> and "
"<emphasis>exec</emphasis> by processes run by the user. Thus, a program can "
"read what the user types by reading standard input, and the program can send "
"output to the user's screen by writing to standard output. The standard "
"error descriptor also is open for writing and is used for error output, "
"whereas standard output is used for ordinary output."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1297
msgid ""
"These (and other) descriptors can be mapped to objects other than the "
"terminal; such mapping is called <emphasis>I/O redirection</emphasis>, and "
"all the standard shells permit users to do it. The shell can direct the "
"output of a program to a file by closing descriptor 1 (standard output) and "
"opening the desired output file to produce a new descriptor 1. It can "
"similarly redirect standard input to come from a file by closing descriptor "
"0 and opening the file."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1308
msgid ""
"Pipes allow the output of one program to be input to another program without "
"rewriting or even relinking of either program. Instead of descriptor 1 "
"(standard output) of the source program being set up to write to the "
"terminal, it is set up to be the input descriptor of a pipe. Similarly, "
"descriptor 0 (standard input) of the sink program is set up to reference the "
"output of the pipe, instead of the terminal keyboard. The resulting set of "
"two processes and the connecting pipe is known as a <emphasis>pipeline</"
"emphasis>. Pipelines can be arbitrarily long series of processes connected "
"by pipes."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1320
msgid ""
"The <emphasis>open</emphasis>, <emphasis>pipe</emphasis>, and "
"<emphasis>socket</emphasis> system calls produce new descriptors with the "
"lowest unused number usable for a descriptor. For pipelines to work, some "
"mechanism must be provided to map such descriptors into 0 and 1. The "
"<emphasis>dup</emphasis> system call creates a copy of a descriptor that "
"points to the same file-table entry. The new descriptor is also the lowest "
"unused one, but if the desired descriptor is closed first, <emphasis>dup</"
"emphasis> can be used to do the desired mapping. Care is required, however: "
"If descriptor 1 is desired, and descriptor 0 happens also to have been "
"closed, descriptor 0 will be the result. To avoid this problem, the system "
"provides the <emphasis>dup2</emphasis> system call; it is like "
"<emphasis>dup</emphasis>, but it takes an additional argument specifying the "
"number of the desired descriptor (if the desired descriptor was already "
"open, <emphasis>dup2</emphasis> closes it before reusing it)."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:1353
#, fuzzy
msgid "Devices"
msgstr "Dispositivos"

#. (itstool) path: sect2/para
#: book.translate.xml:1355
msgid ""
"Hardware devices have filenames, and may be accessed by the user via the "
"same system calls used for regular files. The kernel can distinguish a "
"<emphasis>device special file</emphasis> or <emphasis>special file</"
"emphasis>, and can determine to what device it refers, but most processes do "
"not need to make this determination. Terminals, printers, and tape drives "
"are all accessed as though they were streams of bytes, like 4.4BSD disk "
"files. Thus, device dependencies and peculiarities are kept in the kernel as "
"much as possible, and even in the kernel most of them are segregated in the "
"device drivers."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1369
msgid ""
"Hardware devices can be categorized as either <emphasis>structured</"
"emphasis> or <emphasis>unstructured</emphasis>; they are known as "
"<emphasis>block</emphasis> or <emphasis>character</emphasis> devices, "
"respectively. Processes typically access devices through <emphasis>special "
"files</emphasis> in the filesystem. I/O operations to these files are "
"handled by kernel-resident software modules termed <emphasis>device drivers</"
"emphasis>. Most network-communication hardware devices are accessible "
"through only the interprocess-communication facilities, and do not have "
"special files in the filesystem name space, because the <emphasis>raw-"
"socket</emphasis> interface provides a more natural interface than does a "
"special file."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1391
msgid ""
"Structured or block devices are typified by disks and magnetic tapes, and "
"include most random-access devices. The kernel supports read-modify-write-"
"type buffering actions on block-oriented structured devices to allow the "
"latter to be read and written in a totally random byte-addressed fashion, "
"like regular files. Filesystems are created on block devices."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1399
msgid ""
"Unstructured devices are those devices that do not support a block "
"structure. Familiar unstructured devices are communication lines, raster "
"plotters, and unbuffered magnetic tapes and disks. Unstructured devices "
"typically support large block I/O transfers."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1405
msgid ""
"Unstructured files are called <emphasis>character devices</emphasis> because "
"the first of these to be implemented were terminal device drivers. The "
"kernel interface to the driver for these devices proved convenient for other "
"devices that were not block structured."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1411
msgid ""
"Device special files are created by the <emphasis>mknod</emphasis> system "
"call. There is an additional system call, <emphasis>ioctl</emphasis>, for "
"manipulating the underlying device parameters of special files. The "
"operations that can be done differ for each device. This system call allows "
"the special characteristics of devices to be accessed, rather than "
"overloading the semantics of other system calls. For example, there is an "
"<emphasis>ioctl</emphasis> on a tape drive to write an end-of-tape mark, "
"instead of there being a special or modified version of <emphasis>write</"
"emphasis>."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:1428
#, fuzzy
msgid "Socket IPC"
msgstr "Socket IPC"

#. (itstool) path: sect2/para
#: book.translate.xml:1430
msgid ""
"The 4.2BSD kernel introduced an IPC mechanism more flexible than pipes, "
"based on <emphasis>sockets</emphasis>. A socket is an endpoint of "
"communication referred to by a descriptor, just like a file or a pipe. Two "
"processes can each create a socket, and then connect those two endpoints to "
"produce a reliable byte stream. Once connected, the descriptors for the "
"sockets can be read or written by processes, just as the latter would do "
"with a pipe. The transparency of sockets allows the kernel to redirect the "
"output of one process to the input of another process residing on another "
"machine. A major difference between pipes and sockets is that pipes require "
"a common parent process to set up the communications channel. A connection "
"between sockets can be set up by two unrelated processes, possibly residing "
"on different machines."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1448
msgid ""
"System V provides local interprocess communication through FIFOs (also known "
"as <emphasis>named pipes</emphasis>). FIFOs appear as an object in the "
"filesystem that unrelated processes can open and send data through in the "
"same way as they would communicate through a pipe. Thus, FIFOs do not "
"require a common parent to set them up; they can be connected after a pair "
"of processes are up and running. Unlike sockets, FIFOs can be used on only a "
"local machine; they cannot be used to communicate between processes on "
"different machines. FIFOs are implemented in 4.4BSD only because they are "
"required by the POSIX.1 standard. Their functionality is a subset of the "
"socket interface."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1470
msgid ""
"The socket mechanism requires extensions to the traditional UNIX I/O system "
"calls to provide the associated naming and connection semantics. Rather than "
"overloading the existing interface, the developers used the existing "
"interfaces to the extent that the latter worked without being changed, and "
"designed new interfaces to handle the added semantics. The <emphasis>read</"
"emphasis> and <emphasis>write</emphasis> system calls were used for byte-"
"stream type connections, but six new system calls were added to allow "
"sending and receiving addressed messages such as network datagrams. The "
"system calls for writing messages include <emphasis>send</emphasis>, "
"<emphasis>sendto</emphasis>, and <emphasis>sendmsg</emphasis>. The system "
"calls for reading messages include <emphasis>recv</emphasis>, "
"<emphasis>recvfrom</emphasis>, and <emphasis>recvmsg</emphasis>. In "
"retrospect, the first two in each class are special cases of the others; "
"<emphasis>recvfrom</emphasis> and <emphasis>sendto</emphasis> probably "
"should have been added as library interfaces to <emphasis>recvmsg</emphasis> "
"and <emphasis>sendmsg</emphasis>, respectively."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:1506
#, fuzzy
msgid "Scatter/Gather I/O"
msgstr "Scatter / Gather I / O"

#. (itstool) path: sect2/para
#: book.translate.xml:1508
msgid ""
"In addition to the traditional <emphasis>read</emphasis> and "
"<emphasis>write</emphasis> system calls, 4.2BSD introduced the ability to do "
"scatter/gather I/O. Scatter input uses the <emphasis>readv</emphasis> system "
"call to allow a single read to be placed in several different buffers. "
"Conversely, the <emphasis>writev</emphasis> system call allows several "
"different buffers to be written in a single atomic write. Instead of passing "
"a single buffer and length parameter, as is done with <emphasis>read</"
"emphasis> and <emphasis>write</emphasis>, the process passes in a pointer to "
"an array of buffers and lengths, along with a count describing the size of "
"the array."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1528
msgid ""
"This facility allows buffers in different parts of a process address space "
"to be written atomically, without the need to copy them to a single "
"contiguous buffer. Atomic writes are necessary in the case where the "
"underlying abstraction is record based, such as tape drives that output a "
"tape block on each write request. It is also convenient to be able to read a "
"single request into several different buffers (such as a record header into "
"one place and the data into another). Although an application can simulate "
"the ability to scatter data by reading the data into a large buffer and then "
"copying the pieces to their intended destinations, the cost of memory-to-"
"memory copying in such cases often would more than double the running time "
"of the affected application."
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1543
msgid ""
"Just as <emphasis>send</emphasis> and <emphasis>recv</emphasis> could have "
"been implemented as library interfaces to <emphasis>sendto</emphasis> and "
"<emphasis>recvfrom</emphasis>, it also would have been possible to simulate "
"<emphasis>read</emphasis> with <emphasis>readv</emphasis> and "
"<emphasis>write</emphasis> with <emphasis>writev</emphasis>. However, "
"<emphasis>read</emphasis> and <emphasis>write</emphasis> are used so much "
"more frequently that the added cost of simulating them would not have been "
"worthwhile."
msgstr ""

#. (itstool) path: sect2/title
#: book.translate.xml:1568
#, fuzzy
msgid "Multiple Filesystem Support"
msgstr "Suporte para vários sistemas de arquivos"

#. (itstool) path: sect2/para
#: book.translate.xml:1570
msgid ""
"With the expansion of network computing, it became desirable to support both "
"local and remote filesystems. To simplify the support of multiple "
"filesystems, the developers added a new virtual node or <emphasis>vnode</"
"emphasis> interface to the kernel. The set of operations exported from the "
"vnode interface appear much like the filesystem operations previously "
"supported by the local filesystem. However, they may be supported by a wide "
"range of filesystem types:"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1583
#, fuzzy
msgid "Local disk-based filesystems"
msgstr "Sistemas de arquivos baseados em disco local"

#. (itstool) path: listitem/para
#: book.translate.xml:1587
#, fuzzy
msgid "Files imported using a variety of remote filesystem protocols"
msgstr ""
"Arquivos importados usando uma variedade de protocolos de sistema de "
"arquivos remotos"

#. (itstool) path: listitem/para
#: book.translate.xml:1591
#, fuzzy
msgid "Read-only CD-ROM filesystems"
msgstr "Sistemas de arquivos de CD-ROM somente leitura"

#. (itstool) path: listitem/para
#: book.translate.xml:1597
msgid ""
"Filesystems providing special-purpose interfaces -- for example, the "
"<filename>/proc</filename> filesystem"
msgstr ""

#. (itstool) path: sect2/para
#: book.translate.xml:1603
msgid ""
"A few variants of 4.4BSD, such as FreeBSD, allow filesystems to be loaded "
"dynamically when the filesystems are first referenced by the "
"<emphasis>mount</emphasis> system call. The vnode interface is described in "
"Section 6.5; its ancillary support routines are described in Section 6.6; "
"several of the special-purpose filesystems are described in Section 6.7."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:1618
#, fuzzy
msgid "Filesystems"
msgstr "Sistemas de arquivos"

#. (itstool) path: sect1/para
#: book.translate.xml:1620
msgid ""
"A regular file is a linear array of bytes, and can be read and written "
"starting at any byte in the file. The kernel distinguishes no record "
"boundaries in regular files, although many programs recognize line-feed "
"characters as distinguishing the ends of lines, and other programs may "
"impose other structure. No system-related information about a file is kept "
"in the file itself, but the filesystem stores a small amount of ownership, "
"protection, and usage information with each file."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1629
msgid ""
"A <emphasis>filename</emphasis> component is a string of up to 255 "
"characters. These filenames are stored in a type of file called a "
"<emphasis>directory</emphasis>. The information in a directory about a file "
"is called a <emphasis>directory entry</emphasis> and includes, in addition "
"to the filename, a pointer to the file itself. Directory entries may refer "
"to other directories, as well as to plain files. A hierarchy of directories "
"and files is thus formed, and is called a <emphasis>filesystem</emphasis>;"
msgstr ""

#. (itstool) path: figure/title
#: book.translate.xml:1643
#, fuzzy
msgid "A small filesystem"
msgstr "Um pequeno sistema de arquivos"

#. (itstool) path: imageobject/imagedata
#. This is a reference to an external file such as an image or video. When
#. the file changes, the md5 hash will change to let you know you need to
#. update your localized copy. The msgstr is not used at all. Set it to
#. whatever you like once you have updated your copy of the file.
#: book.translate.xml:1647
msgctxt "_"
msgid "external ref='fig2' md5='__failed__'"
msgstr ""

#. (itstool) path: textobject/literallayout
#: book.translate.xml:1651
#, no-wrap
msgid ""
"                                    +-------+\n"
"                                    |       |\n"
"                                    +-------+\n"
"                                   /         \\\n"
"                              usr /           \\ vmunix\n"
"                                |/             \\|\n"
"                        +-------+               +-------+\n"
"                        |       |               |       |\n"
"                        +-------+               +-------+\n"
"                       /    |    \\\n"
"                staff /     |     \\ bin\n"
"                    |/      | tmp  \\|\n"
"            +-------+       V       +-------+\n"
"            |       |   +-------+   |       |\n"
"            +-------+   |       |   +-------+\n"
"           /    |    \\  +-------+  /    |    \\\n"
" mckusick /     |     \\|         |/     |     \\ ls\n"
"        |/      | karels                | vi   \\|\n"
"+-------+       V                       V       +-------+\n"
"|       |   +-------+               +-------+   |       |\n"
"+-------+   |       |               |       |   +-------+\n"
"            +-------+               +-------+"
msgstr ""

#. (itstool) path: figure/mediaobject
#: book.translate.xml:1645
msgid ""
"<imageobject> <imagedata fileref=\"fig2\"/> </imageobject> <textobject> <_:"
"literallayout-1/> </textobject> <textobject> <phrase>A small filesystem "
"tree</phrase> </textobject>"
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1681
msgid ""
"a small one is shown in <xref linkend=\"fig-small-fs\"/>. Directories may "
"contain subdirectories, and there is no inherent limitation to the depth "
"with which directory nesting may occur. To protect the consistency of the "
"filesystem, the kernel does not permit processes to write directly into "
"directories. A filesystem may include not only plain files and directories, "
"but also references to other objects, such as devices and sockets."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1689
msgid ""
"The filesystem forms a tree, the beginning of which is the <emphasis>root "
"directory</emphasis>, sometimes referred to by the name <emphasis>slash</"
"emphasis>, spelled with a single solidus character (/). The root directory "
"contains files; in our example in Fig 2.2, it contains <filename>vmunix</"
"filename>, a copy of the kernel-executable object file. It also contains "
"directories; in this example, it contains the <filename>usr</filename> "
"directory. Within the <filename>usr</filename> directory is the "
"<filename>bin</filename> directory, which mostly contains executable object "
"code of programs, such as the files <filename>ls</filename> and "
"<filename>vi</filename>."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1711
msgid ""
"A process identifies a file by specifying that file's <emphasis>pathname</"
"emphasis>, which is a string composed of zero or more filenames separated by "
"slash (/) characters. The kernel associates two directories with each "
"process for use in interpreting pathnames. A process's <emphasis>root "
"directory</emphasis> is the topmost point in the filesystem that the process "
"can access; it is ordinarily set to the root directory of the entire "
"filesystem. A pathname beginning with a slash is called an "
"<emphasis>absolute pathname</emphasis>, and is interpreted by the kernel "
"starting with the process's root directory."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1725
msgid ""
"A pathname that does not begin with a slash is called a <emphasis>relative "
"pathname</emphasis>, and is interpreted relative to the <emphasis>current "
"working directory</emphasis> of the process. (This directory also is known "
"by the shorter names <emphasis>current directory</emphasis> or "
"<emphasis>working directory</emphasis>.) The current directory itself may be "
"referred to directly by the name <emphasis>dot</emphasis>, spelled with a "
"single period (<filename>.</filename>). The filename <emphasis>dot-dot</"
"emphasis> (<filename>..</filename>) refers to a directory's parent "
"directory. The root directory is its own parent."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1744
msgid ""
"A process may set its root directory with the <emphasis>chroot</emphasis> "
"system call, and its current directory with the <emphasis>chdir</emphasis> "
"system call. Any process may do <emphasis>chdir</emphasis> at any time, but "
"<emphasis>chroot</emphasis> is permitted only a process with superuser "
"privileges. <emphasis>Chroot</emphasis> is normally used to set up "
"restricted access to the system."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1758
msgid ""
"Using the filesystem shown in Fig. 2.2, if a process has the root of the "
"filesystem as its root directory, and has <filename>/usr</filename> as its "
"current directory, it can refer to the file <filename>vi</filename> either "
"from the root with the absolute pathname <filename>/usr/bin/vi</filename>, "
"or from its current directory with the relative pathname <filename>bin/vi</"
"filename>."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1768
msgid ""
"System utilities and databases are kept in certain well-known directories. "
"Part of the well-defined hierarchy includes a directory that contains the "
"<emphasis>home directory</emphasis> for each user -- for example, <filename>/"
"usr/staff/mckusick</filename> and <filename>/usr/staff/karels</filename> in "
"Fig. 2.2. When users log in, the current working directory of their shell is "
"set to the home directory. Within their home directories, users can create "
"directories as easily as they can regular files. Thus, a user can build "
"arbitrarily complex subhierarchies."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1783
msgid ""
"The user usually knows of only one filesystem, but the system may know that "
"this one virtual filesystem is really composed of several physical "
"filesystems, each on a different device. A physical filesystem may not span "
"multiple hardware devices. Since most physical disk devices are divided into "
"several logical devices, there may be more than one filesystem per physical "
"device, but there will be no more than one per logical device. One "
"filesystem -- the filesystem that anchors all absolute pathnames -- is "
"called the <emphasis>root filesystem</emphasis>, and is always available. "
"Others may be mounted; that is, they may be integrated into the directory "
"hierarchy of the root filesystem. References to a directory that has a "
"filesystem mounted on it are converted transparently by the kernel into "
"references to the root directory of the mounted filesystem."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1802
msgid ""
"The <emphasis>link</emphasis> system call takes the name of an existing file "
"and another name to create for that file. After a successful <emphasis>link</"
"emphasis>, the file can be accessed by either filename. A filename can be "
"removed with the <emphasis>unlink</emphasis> system call. When the final "
"name for a file is removed (and the final process that has the file open "
"closes it), the file is deleted."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1815
msgid ""
"Files are organized hierarchically in <emphasis>directories</emphasis>. A "
"directory is a type of file, but, in contrast to regular files, a directory "
"has a structure imposed on it by the system. A process can read a directory "
"as it would an ordinary file, but only the kernel is permitted to modify a "
"directory. Directories are created by the <emphasis>mkdir</emphasis> system "
"call and are removed by the <emphasis>rmdir</emphasis> system call. Before "
"4.2BSD, the <emphasis>mkdir</emphasis> and <emphasis>rmdir</emphasis> system "
"calls were implemented by a series of <emphasis>link</emphasis> and "
"<emphasis>unlink</emphasis> system calls being done. There were three "
"reasons for adding systems calls explicitly to create and delete directories:"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1841
msgid ""
"The operation could be made atomic. If the system crashed, the directory "
"would not be left half-constructed, as could happen when a series of link "
"operations were used."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1847
msgid ""
"When a networked filesystem is being run, the creation and deletion of files "
"and directories need to be specified atomically so that they can be "
"serialized."
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1853
msgid ""
"When supporting non-UNIX filesystems, such as an MS-DOS filesystem, on "
"another partition of the disk, the other filesystem may not support link "
"operations. Although other filesystems might support the concept of "
"directories, they probably would not create and delete the directories with "
"links, as the UNIX filesystem does. Consequently, they could create and "
"delete directories only if explicit directory create and delete requests "
"were presented."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1865
msgid ""
"The <emphasis>chown</emphasis> system call sets the owner and group of a "
"file, and <emphasis>chmod</emphasis> changes protection attributes. "
"<emphasis>Stat</emphasis> applied to a filename can be used to read back "
"such properties of a file. The <emphasis>fchown</emphasis>, "
"<emphasis>fchmod</emphasis>, and <emphasis>fstat</emphasis> system calls are "
"applied to a descriptor, instead of to a filename, to do the same set of "
"operations. The <emphasis>rename</emphasis> system call can be used to give "
"a file a new name in the filesystem, replacing one of the file's old names. "
"Like the directory-creation and directory-deletion operations, the "
"<emphasis>rename</emphasis> system call was added to 4.2BSD to provide "
"atomicity to name changes in the local filesystem. Later, it proved useful "
"explicitly to export renaming operations to foreign filesystems and over the "
"network."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1890
msgid ""
"The <emphasis>truncate</emphasis> system call was added to 4.2BSD to allow "
"files to be shortened to an arbitrary offset. The call was added primarily "
"in support of the Fortran run-time library, which has the semantics such "
"that the end of a random-access file is set to be wherever the program most "
"recently accessed that file. Without the <emphasis>truncate</emphasis> "
"system call, the only way to shorten a file was to copy the part that was "
"desired to a new file, to delete the old file, then to rename the copy to "
"the original name. As well as this algorithm being slow, the library could "
"potentially fail on a full filesystem."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1906
msgid ""
"Once the filesystem had the ability to shorten files, the kernel took "
"advantage of that ability to shorten large empty directories. The advantage "
"of shortening empty directories is that it reduces the time spent in the "
"kernel searching them when names are being created or deleted."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1913
msgid ""
"Newly created files are assigned the user identifier of the process that "
"created them and the group identifier of the directory in which they were "
"created. A three-level access-control mechanism is provided for the "
"protection of files. These three levels specify the accessibility of a file "
"to"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:1922
#, fuzzy
msgid "The user who owns the file"
msgstr "O usuário que possui o arquivo"

#. (itstool) path: listitem/para
#: book.translate.xml:1925
#, fuzzy
msgid "The group that owns the file"
msgstr "O grupo que possui o arquivo"

#. (itstool) path: listitem/para
#: book.translate.xml:1928
#, fuzzy
msgid "Everyone else"
msgstr "Todo mundo"

#. (itstool) path: sect1/para
#: book.translate.xml:1932
msgid ""
"Each level of access has separate indicators for read permission, write "
"permission, and execute permission."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1935
msgid ""
"Files are created with zero length, and may grow when they are written. "
"While a file is open, the system maintains a pointer into the file "
"indicating the current location in the file associated with the descriptor. "
"This pointer can be moved about in the file in a random-access fashion. "
"Processes sharing a file descriptor through a <emphasis>fork</emphasis> or "
"<emphasis>dup</emphasis> system call share the current location pointer. "
"Descriptors created by separate <emphasis>open</emphasis> system calls have "
"separate current location pointers. Files may have <emphasis>holes</"
"emphasis> in them. Holes are void areas in the linear extent of the file "
"where data have never been written. A process can create these holes by "
"positioning the pointer past the current end-of-file and writing. When read, "
"holes are treated by the system as zero-valued bytes."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1957
msgid ""
"Earlier UNIX systems had a limit of 14 characters per filename component. "
"This limitation was often a problem. For example, in addition to the natural "
"desire of users to give files long descriptive names, a common way of "
"forming filenames is as <filename><replaceable>basename</replaceable>."
"<replaceable>extension</replaceable></filename>, where the extension "
"(indicating the kind of file, such as <literal>.c</literal> for C source or "
"<literal>.o</literal> for intermediate binary object) is one to three "
"characters, leaving 10 to 12 characters for the basename. Source-code-"
"control systems and editors usually take up another two characters, either "
"as a prefix or a suffix, for their purposes, leaving eight to 10 characters. "
"It is easy to use 10 or 12 characters in a single English word as a basename "
"(e.g., ``multiplexer'')."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:1977
msgid ""
"It is possible to keep within these limits, but it is inconvenient or even "
"dangerous, because other UNIX systems accept strings longer than the limit "
"when creating files, but then <emphasis>truncate</emphasis> to the limit. A "
"C language source file named <filename>multiplexer.c</filename> (already 13 "
"characters) might have a source-code-control file with <literal>s.</literal> "
"prepended, producing a filename <filename>s.multiplexer</filename> that is "
"indistinguishable from the source-code-control file for "
"<filename>multiplexer.ms</filename>, a file containing <literal>troff</"
"literal> source for documentation for the C program. The contents of the two "
"original files could easily get confused with no warning from the source-"
"code-control system. Careful coding can detect this problem, but the long "
"filenames first introduced in 4.2BSD practically eliminate it."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:2004
#, fuzzy
msgid "Filestores"
msgstr "Filestores"

#. (itstool) path: sect1/para
#: book.translate.xml:2006
msgid ""
"The operations defined for local filesystems are divided into two parts. "
"Common to all local filesystems are hierarchical naming, locking, quotas, "
"attribute management, and protection. These features are independent of how "
"the data will be stored. 4.4BSD has a single implementation to provide these "
"semantics."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2012
msgid ""
"The other part of the local filesystem is the organization and management of "
"the data on the storage media. Laying out the contents of files on the "
"storage media is the responsibility of the filestore. 4.4BSD supports three "
"different filestore layouts:"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:2020
#, fuzzy
msgid "The traditional Berkeley Fast Filesystem"
msgstr "O tradicional sistema de arquivos Berkeley Fast"

#. (itstool) path: listitem/para
#: book.translate.xml:2023
msgid ""
"The log-structured filesystem, based on the Sprite operating-system design "
"<xref linkend=\"biblio-rosenblum\"/>"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:2028
#, fuzzy
msgid "A memory-based filesystem"
msgstr "Um sistema de arquivos baseado em memória"

#. (itstool) path: sect1/para
#: book.translate.xml:2032
msgid ""
"Although the organizations of these filestores are completely different, "
"these differences are indistinguishable to the processes using the "
"filestores."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2036
msgid ""
"The Fast Filesystem organizes data into cylinder groups. Files that are "
"likely to be accessed together, based on their locations in the filesystem "
"hierarchy, are stored in the same cylinder group. Files that are not "
"expected to accessed together are moved into different cylinder groups. "
"Thus, files written at the same time may be placed far apart on the disk."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2045
msgid ""
"The log-structured filesystem organizes data as a log. All data being "
"written at any point in time are gathered together, and are written at the "
"same disk location. Data are never overwritten; instead, a new copy of the "
"file is written that replaces the old one. The old files are reclaimed by a "
"garbage-collection process that runs when the filesystem becomes full and "
"additional free space is needed."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2053
msgid ""
"The memory-based filesystem is designed to store data in virtual memory. It "
"is used for filesystems that need to support fast but temporary data, such "
"as <filename>/tmp</filename>. The goal of the memory-based filesystem is to "
"keep the storage packed as compactly as possible to minimize the usage of "
"virtual-memory resources."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:2063
#, fuzzy
msgid "Network Filesystem"
msgstr "Sistema de arquivos de rede"

#. (itstool) path: sect1/para
#: book.translate.xml:2065
msgid ""
"Initially, networking was used to transfer data from one machine to another. "
"Later, it evolved to allowing users to log in remotely to another machine. "
"The next logical step was to bring the data to the user, instead of having "
"the user go to the data -- and network filesystems were born. Users working "
"locally do not experience the network delays on each keystroke, so they have "
"a more responsive environment."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2075
msgid ""
"Bringing the filesystem to a local machine was among the first of the major "
"client-server applications. The <emphasis>server</emphasis> is the remote "
"machine that exports one or more of its filesystems. The <emphasis>client</"
"emphasis> is the local machine that imports those filesystems. From the "
"local client's point of view, a remotely mounted filesystem appears in the "
"file-tree name space just like any other locally mounted filesystem. Local "
"clients can change into directories on the remote filesystem, and can read, "
"write, and execute binaries within that remote filesystem identically to the "
"way that they can do these operations on a local filesystem."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2091
msgid ""
"When the local client does an operation on a remote filesystem, the request "
"is packaged and is sent to the server. The server does the requested "
"operation and returns either the requested information or an error "
"indicating why the request was denied. To get reasonable performance, the "
"client must cache frequently accessed data. The complexity of remote "
"filesystems lies in maintaining cache consistency between the server and its "
"many clients."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2101
msgid ""
"Although many remote-filesystem protocols have been developed over the "
"years, the most pervasive one in use among UNIX systems is the Network "
"Filesystem (NFS), whose protocol and most widely used implementation were "
"done by Sun Microsystems. The 4.4BSD kernel supports the NFS protocol, "
"although the implementation was done independently from the protocol "
"specification <xref linkend=\"biblio-macklem\"/>. The NFS protocol is "
"described in Chapter 9."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:2121
#, fuzzy
msgid "Terminals"
msgstr "Terminais"

#. (itstool) path: sect1/para
#: book.translate.xml:2123
msgid ""
"Terminals support the standard system I/O operations, as well as a "
"collection of terminal-specific operations to control input-character "
"editing and output delays. At the lowest level are the terminal device "
"drivers that control the hardware terminal ports. Terminal input is handled "
"according to the underlying communication characteristics, such as baud "
"rate, and according to a set of software-controllable parameters, such as "
"parity checking."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2133
msgid ""
"Layered above the terminal device drivers are line disciplines that provide "
"various degrees of character processing. The default line discipline is "
"selected when a port is being used for an interactive login. The line "
"discipline is run in <emphasis>canonical mode</emphasis>; input is processed "
"to provide standard line-oriented editing functions, and input is presented "
"to a process on a line-by-line basis."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2143
msgid ""
"Screen editors and programs that communicate with other computers generally "
"run in <emphasis>noncanonical mode</emphasis> (also commonly referred to as "
"<emphasis>raw mode</emphasis> or <emphasis>character-at-a-time mode</"
"emphasis>). In this mode, input is passed through to the reading process "
"immediately and without interpretation. All special-character input "
"processing is disabled, no erase or other line editing processing is done, "
"and all characters are passed to the program that is reading from the "
"terminal."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2158
msgid ""
"It is possible to configure the terminal in thousands of combinations "
"between these two extremes. For example, a screen editor that wanted to "
"receive user interrupts asynchronously might enable the special characters "
"that generate signals and enable output flow control, but otherwise run in "
"noncanonical mode; all other characters would be passed through to the "
"process uninterpreted."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2167
msgid ""
"On output, the terminal handler provides simple formatting services, "
"including"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:2173
msgid ""
"Converting the line-feed character to the two-character carriage-return-line-"
"feed sequence"
msgstr ""

#. (itstool) path: listitem/para
#: book.translate.xml:2178
#, fuzzy
msgid "Inserting delays after certain standard control characters"
msgstr "Inserindo atrasos após certos caracteres de controle padrão"

#. (itstool) path: listitem/para
#: book.translate.xml:2182
#, fuzzy
msgid "Expanding tabs"
msgstr "Expandir guias"

#. (itstool) path: listitem/para
#: book.translate.xml:2186
msgid ""
"Displaying echoed nongraphic ASCII characters as a two-character sequence of "
"the form ``^C'' (i.e., the ASCII caret character followed by the ASCII "
"character that is the character's value offset from the ASCII ``@'' "
"character)."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2200
msgid ""
"Each of these formatting services can be disabled individually by a process "
"through control requests."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:2206
#, fuzzy
msgid "Interprocess Communication"
msgstr "Comunicação entre processos"

#. (itstool) path: sect1/para
#: book.translate.xml:2208
msgid ""
"Interprocess communication in 4.4BSD is organized in <emphasis>communication "
"domains</emphasis>. Domains currently supported include the <emphasis>local "
"domain</emphasis>, for communication between processes executing on the same "
"machine; the <emphasis>internet domain</emphasis>, for communication between "
"processes using the TCP/IP protocol suite (perhaps within the Internet); the "
"ISO/OSI protocol family for communication between sites required to run "
"them; and the <emphasis>XNS domain</emphasis>, for communication between "
"processes using the XEROX Network Systems (XNS) protocols."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2227
msgid ""
"Within a domain, communication takes place between communication endpoints "
"known as <emphasis>sockets</emphasis>. As mentioned in Section 2.6, the "
"<emphasis>socket</emphasis> system call creates a socket and returns a "
"descriptor; other IPC system calls are described in Chapter 11. Each socket "
"has a type that defines its communications semantics; these semantics "
"include properties such as reliability, ordering, and prevention of "
"duplication of messages."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2243
msgid ""
"Each socket has associated with it a <emphasis>communication protocol</"
"emphasis>. This protocol provides the semantics required by the socket "
"according to the latter's type. Applications may request a specific protocol "
"when creating a socket, or may allow the system to select a protocol that is "
"appropriate for the type of socket being created."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2251
msgid ""
"Sockets may have addresses bound to them. The form and meaning of socket "
"addresses are dependent on the communication domain in which the socket is "
"created. Binding a name to a socket in the local domain causes a file to be "
"created in the filesystem."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2257
msgid ""
"Normal data transmitted and received through sockets are untyped. Data-"
"representation issues are the responsibility of libraries built on top of "
"the interprocess-communication facilities. In addition to transporting "
"normal data, communication domains may support the transmission and "
"reception of specially typed data, termed <emphasis>access rights</"
"emphasis>. The local domain, for example, uses this facility to pass "
"descriptors between processes."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2266
msgid ""
"Networking implementations on UNIX before 4.2BSD usually worked by "
"overloading the character-device interfaces. One goal of the socket "
"interface was for naive programs to be able to work without change on stream-"
"style connections. Such programs can work only if the <emphasis>read</"
"emphasis> and <emphasis>write</emphasis> systems calls are unchanged. "
"Consequently, the original interfaces were left intact, and were made to "
"work on stream-type sockets. A new interface was added for more complicated "
"sockets, such as those used to send datagrams, with which a destination "
"address must be presented with each <emphasis>send</emphasis> call."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2283
msgid ""
"Another benefit is that the new interface is highly portable. Shortly after "
"a test release was available from Berkeley, the socket interface had been "
"ported to System III by a UNIX vendor (although AT&amp;T did not support the "
"socket interface until the release of System V Release 4, deciding instead "
"to use the Eighth Edition stream mechanism). The socket interface was also "
"ported to run in many Ethernet boards by vendors, such as Excelan and "
"Interlan, that were selling into the PC market, where the machines were too "
"small to run networking in the main processor. More recently, the socket "
"interface was used as the basis for Microsoft's Winsock networking interface "
"for Windows."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:2300
#, fuzzy
msgid "Network Communication"
msgstr "Comunicação de rede"

#. (itstool) path: sect1/para
#: book.translate.xml:2302
msgid ""
"Some of the communication domains supported by the <emphasis>socket</"
"emphasis> IPC mechanism provide access to network protocols. These protocols "
"are implemented as a separate software layer logically below the socket "
"software in the kernel. The kernel provides many ancillary services, such as "
"buffer management, message routing, standardized interfaces to the "
"protocols, and interfaces to the network interface drivers for the use of "
"the various network protocols."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2313
msgid ""
"At the time that 4.2BSD was being implemented, there were many networking "
"protocols in use or under development, each with its own strengths and "
"weaknesses. There was no clearly superior protocol or protocol suite. By "
"supporting multiple protocols, 4.2BSD could provide interoperability and "
"resource sharing among the diverse set of machines that was available in the "
"Berkeley environment. Multiple-protocol support also provides for future "
"changes. Today's protocols designed for 10- to 100-Mbit-per-second Ethernets "
"are likely to be inadequate for tomorrow's 1- to 10-Gbit-per-second fiber-"
"optic networks. Consequently, the network-communication layer is designed to "
"support multiple protocols. New protocols are added to the kernel without "
"the support for older protocols being affected. Older applications can "
"continue to operate using the old protocol over the same physical network as "
"is used by newer applications running with a newer network protocol."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:2335
#, fuzzy
msgid "Network Implementation"
msgstr "Implementação de Rede"

#. (itstool) path: sect1/para
#: book.translate.xml:2337
msgid ""
"The first protocol suite implemented in 4.2BSD was DARPA's Transmission "
"Control Protocol/Internet Protocol (TCP/IP). The CSRG chose TCP/IP as the "
"first network to incorporate into the socket IPC framework, because a 4.1BSD-"
"based implementation was publicly available from a DARPA-sponsored project "
"at Bolt, Beranek, and Newman (BBN). That was an influential choice: The "
"4.2BSD implementation is the main reason for the extremely widespread use of "
"this protocol suite. Later performance and capability improvements to the "
"TCP/IP implementation have also been widely adopted. The TCP/IP "
"implementation is described in detail in Chapter 13."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2363
msgid ""
"The release of 4.3BSD added the Xerox Network Systems (XNS) protocol suite, "
"partly building on work done at the University of Maryland and at Cornell "
"University. This suite was needed to connect isolated machines that could "
"not communicate using TCP/IP."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2373
msgid ""
"The release of 4.4BSD added the ISO protocol suite because of the latter's "
"increasing visibility both within and outside the United States. Because of "
"the somewhat different semantics defined for the ISO protocols, some minor "
"changes were required in the socket interface to accommodate these "
"semantics. The changes were made such that they were invisible to clients of "
"other existing protocols. The ISO protocols also required extensive addition "
"to the two-level routing tables provided by the kernel in 4.3BSD. The "
"greatly expanded routing capabilities of 4.4BSD include arbitrary levels of "
"routing with variable-length addresses and network masks."
msgstr ""

#. (itstool) path: sect1/title
#: book.translate.xml:2393
#, fuzzy
msgid "System Operation"
msgstr "Operação de sistema"

#. (itstool) path: sect1/para
#: book.translate.xml:2395
msgid ""
"Bootstrapping mechanisms are used to start the system running. First, the "
"4.4BSD kernel must be loaded into the main memory of the processor. Once "
"loaded, it must go through an initialization phase to set the hardware into "
"a known state. Next, the kernel must do autoconfiguration, a process that "
"finds and configures the peripherals that are attached to the processor. The "
"system begins running in single-user mode while a start-up script does disk "
"checks and starts the accounting and quota checking. Finally, the start-up "
"script starts the general system services and brings up the system to full "
"multiuser operation."
msgstr ""

#. (itstool) path: sect1/para
#: book.translate.xml:2409
msgid ""
"During multiuser operation, processes wait for login requests on the "
"terminal lines and network ports that have been configured for user access. "
"When a login request is detected, a login process is spawned and user "
"validation is done. When the login validation is successful, a login shell "
"is created from which the user can run additional processes."
msgstr ""

#. (itstool) path: bibliography/title
#: book.translate.xml:2420
#, fuzzy
msgid "References"
msgstr "Referências"

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2423
#, fuzzy
msgid "Accetta et al, 1986"
msgstr "Accetta et al., 1986"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2429
msgid ""
"<personname><firstname>M. </firstname><surname>Accetta</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2430
msgid ""
"<personname><firstname>R.</firstname><surname>Baron</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2431
msgid ""
"<personname><firstname>W.</firstname><surname>Bolosky</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2432
msgid ""
"<personname><firstname>D.</firstname><surname>Golub</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2433
msgid ""
"<personname><firstname>R.</firstname><surname>Rashid</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#. (itstool) path: biblioentry/author
#: book.translate.xml:2434 book.translate.xml:2704
msgid ""
"<personname><firstname>A.</firstname><surname>Tevanian</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2435
msgid ""
"<personname><firstname>M.</firstname><surname>Young</surname></personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2438
#, fuzzy
msgid "93-113"
msgstr "93-113"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2425
msgid ""
"<citetitle>Mach: A New Kernel Foundation for UNIX Development\"</citetitle> "
"<_:authorgroup-1/> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioset/publishername
#: book.translate.xml:2443 book.translate.xml:2487 book.translate.xml:2511
#, fuzzy
msgid "USENIX Association"
msgstr "USENIX Association"

#. (itstool) path: biblioset/pubdate
#: book.translate.xml:2444
#, fuzzy
msgid "June 1986"
msgstr "Junho de 1986"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2441 book.translate.xml:2509
msgid ""
"<citetitle>USENIX Association Conference Proceedings</citetitle> <_:"
"publishername-1/> <_:pubdate-2/>"
msgstr ""

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2449
#, fuzzy
msgid "Cheriton, 1988"
msgstr "Cheriton, 1988"

#. (itstool) path: biblioset/author
#: book.translate.xml:2454
msgid ""
"<personname><firstname>D. R.</firstname><surname>Cheriton</surname></"
"personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2456
#, fuzzy
msgid "314-333"
msgstr "314-333"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2451
msgid ""
"<citetitle>The V Distributed System</citetitle> <_:author-1/> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioset/pubdate
#. (itstool) path: biblioentry/pubdate
#: book.translate.xml:2462 book.translate.xml:2631
#, fuzzy
msgid "March 1988"
msgstr "Março de 1988"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2459
#, fuzzy
msgid "<citetitle>Comm ACM, 31, 3</citetitle> <_:pubdate-1/>"
msgstr " <citetitle> Comm ACM, 31, 3 </citetitle> &lt;_: Pubdate-1 /&gt; "

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2467
#, fuzzy
msgid "Ewens et al, 1985"
msgstr "Ewens et al., 1985"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2473
msgid ""
"<personname><firstname>P.</firstname><surname>Ewens</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2475
msgid ""
"<personname><firstname>D. R.</firstname><surname>Blythe</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2477
msgid ""
"<personname><firstname>M.</firstname><surname>Funkenhauser</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2479
msgid ""
"<personname><firstname>R. C.</firstname><surname>Holt</surname></personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2482
#, fuzzy
msgid "247-254"
msgstr "247-254"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2469
msgid ""
"<citetitle>Tunis: A Distributed Multiprocessor Operating System</citetitle> "
"<_:authorgroup-1/> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioset/pubdate
#: book.translate.xml:2488
#, fuzzy
msgid "June 1985"
msgstr "Junho de 1985"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2485 book.translate.xml:2580
msgid ""
"<citetitle>USENIX Assocation Conference Proceedings</citetitle> <_:"
"publishername-1/> <_:pubdate-2/>"
msgstr ""

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2493
#, fuzzy
msgid "Gingell et al, 1987"
msgstr "Gingell et al., 1987"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2499
msgid ""
"<personname><firstname>R.</firstname><surname>Gingell</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2501
msgid ""
"<personname><firstname>J.</firstname><surname>Moran</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2503
msgid ""
"<personname><firstname>W.</firstname><surname>Shannon</surname></personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2506
#, fuzzy
msgid "81-94"
msgstr "81-94"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2495
msgid ""
"<citetitle>Virtual Memory Architecture in SunOS</citetitle> <_:authorgroup-1/"
"> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioset/pubdate
#: book.translate.xml:2512
#, fuzzy
msgid "June 1987"
msgstr "Junho de 1987"

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2517
#, fuzzy
msgid "Kernighan &amp; Pike, 1984"
msgstr "Kernighan &amp; Pike, 1984"

#. (itstool) path: biblioentry/citetitle
#: book.translate.xml:2519
#, fuzzy
msgid "The UNIX Programming Environment"
msgstr "O ambiente de programação UNIX"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2522
msgid ""
"<personname><firstname>B. W.</firstname><surname>Kernighan</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2524
msgid ""
"<personname><firstname>R.</firstname><surname>Pike</surname></personname>"
msgstr ""

#. (itstool) path: publisher/publishername
#: book.translate.xml:2528
#, fuzzy
msgid "Prentice-Hall"
msgstr "Prentice-Hall"

#. (itstool) path: publisher/address
#: book.translate.xml:2529
#, no-wrap
msgid ""
"\n"
"\t  <city>Englewood Cliffs</city>\n"
"\t  <state>NJ</state>\n"
"\t"
msgstr ""

#. (itstool) path: biblioentry/pubdate
#: book.translate.xml:2535
#, fuzzy
msgid "1984"
msgstr "1984"

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2539
#, fuzzy
msgid "Macklem, 1994"
msgstr "Macklem, 1994"

#. (itstool) path: biblioset/author
#: book.translate.xml:2544
msgid ""
"<personname><firstname>R.</firstname><surname>Macklem</surname></personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2546
#, fuzzy
msgid "6:1-14"
msgstr "6: 1-14"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2541
msgid ""
"<citetitle>The 4.4BSD NFS Implementation</citetitle> <_:author-1/> <_:"
"pagenums-2/>"
msgstr ""

#. (itstool) path: publisher/publishername
#: book.translate.xml:2553 book.translate.xml:2612
#, fuzzy
msgid "O'Reilly &amp; Associates, Inc."
msgstr "O&#39;Reilly &amp; Associates, Inc."

#. (itstool) path: publisher/address
#: book.translate.xml:2554 book.translate.xml:2613
#, no-wrap
msgid ""
"\n"
"\t    <city>Sebastopol</city>\n"
"\t    <state>CA</state>\n"
"\t  "
msgstr ""

#. (itstool) path: biblioset/pubdate
#: book.translate.xml:2560 book.translate.xml:2619
#, fuzzy
msgid "1994"
msgstr "1994"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2549
msgid ""
"<citetitle>4.4BSD System Manager's Manual</citetitle> <_:publisher-1/> <_:"
"pubdate-2/>"
msgstr ""

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2565
#, fuzzy
msgid "McKusick &amp; Karels, 1988"
msgstr "McKusick &amp; Karels, 1988"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2572 book.translate.xml:2594
msgid ""
"<personname><firstname>M. K.</firstname><surname>McKusick</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2574 book.translate.xml:2596
msgid ""
"<personname><firstname>M. J.</firstname><surname>Karels</surname></"
"personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2577
#, fuzzy
msgid "295-304"
msgstr "295-304"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2567
msgid ""
"<citetitle>Design of a General Purpose Memory Allocator for the 4.3BSD UNIX "
"Kernel</citetitle> <_:authorgroup-1/> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioset/publishername
#: book.translate.xml:2582
#, fuzzy
msgid "USENIX Assocation"
msgstr "USENIX Assocation"

#. (itstool) path: biblioset/pubdate
#: book.translate.xml:2583
#, fuzzy
msgid "June 1998"
msgstr "Junho de 1998"

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2588
#, fuzzy
msgid "McKusick et al, 1994"
msgstr "McKusick et al, 1994"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2598
msgid ""
"<personname><firstname>S. J.</firstname><surname>Leffler</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2600
msgid ""
"<personname><firstname>W. N.</firstname><surname>Joy</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2602
msgid ""
"<personname><firstname>R. S.</firstname><surname>Faber</surname></personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2605
#, fuzzy
msgid "5:1-42"
msgstr "5: 1-42"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2590
msgid ""
"<citetitle>Berkeley Software Architecture Manual, 4.4BSD Edition</citetitle> "
"<_:authorgroup-1/> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2608
msgid ""
"<citetitle>4.4BSD Programmer's Supplementary Documents</citetitle> <_:"
"publisher-1/> <_:pubdate-2/>"
msgstr ""

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2624
#, fuzzy
msgid "Ritchie, 1988"
msgstr "Ritchie, 1988"

#. (itstool) path: biblioentry/citetitle
#: book.translate.xml:2626
#, fuzzy
msgid "Early Kernel Design"
msgstr "Early Kernel Design"

#. (itstool) path: biblioentry/subtitle
#: book.translate.xml:2627
#, fuzzy
msgid "private communication"
msgstr "comunicação privada"

#. (itstool) path: biblioentry/author
#: book.translate.xml:2629
msgid ""
"<personname><firstname>D. M.</firstname><surname>Ritchie</surname></"
"personname>"
msgstr ""

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2635
#, fuzzy
msgid "Rosenblum &amp; Ousterhout, 1992"
msgstr "Rosenblum &amp; Ousterhout, 1992"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2642
msgid ""
"<personname><firstname>M.</firstname><surname>Rosenblum</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2644
msgid ""
"<personname><firstname>K.</firstname><surname>Ousterhout</surname></"
"personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2647
#, fuzzy
msgid "26-52"
msgstr "26-52"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2637
msgid ""
"<citetitle>The Design and Implementation of a Log-Structured File System</"
"citetitle> <_:authorgroup-1/> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioset/publishername
#: book.translate.xml:2653
#, fuzzy
msgid "Association for Computing Machinery"
msgstr "Association for Computing Machinery"

#. (itstool) path: biblioset/pubdate
#: book.translate.xml:2654
#, fuzzy
msgid "February 1992"
msgstr "Fevereiro de 1992"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2650
msgid ""
"<citetitle>ACM Transactions on Computer Systems, 10, 1</citetitle> <_:"
"publishername-1/> <_:pubdate-2/>"
msgstr ""

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2659
#, fuzzy
msgid "Rozier et al, 1988"
msgstr "Rozier et al, 1988"

#. (itstool) path: authorgroup/author
#: book.translate.xml:2665
msgid ""
"<personname><firstname>M.</firstname><surname>Rozier</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2667
msgid ""
"<personname><firstname>V.</firstname><surname>Abrossimov</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2669
msgid ""
"<personname><firstname>F.</firstname><surname>Armand</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2671
msgid ""
"<personname><firstname>I.</firstname><surname>Boule</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2673
msgid ""
"<personname><firstname>M.</firstname><surname>Gien</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2675
msgid ""
"<personname><firstname>M.</firstname><surname>Guillemont</surname></"
"personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2677
msgid ""
"<personname><firstname>F.</firstname><surname>Herrmann</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2679
msgid ""
"<personname><firstname>C.</firstname><surname>Kaiser</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2681
msgid ""
"<personname><firstname>S.</firstname><surname>Langlois</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2683
msgid ""
"<personname><firstname>P.</firstname><surname>Leonard</surname></personname>"
msgstr ""

#. (itstool) path: authorgroup/author
#: book.translate.xml:2685
msgid ""
"<personname><firstname>W.</firstname><surname>Neuhauser</surname></"
"personname>"
msgstr ""

#. (itstool) path: biblioset/pagenums
#: book.translate.xml:2688
#, fuzzy
msgid "305-370"
msgstr "305-370"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2661
msgid ""
"<citetitle>Chorus Distributed Operating Systems</citetitle> <_:authorgroup-1/"
"> <_:pagenums-2/>"
msgstr ""

#. (itstool) path: biblioset/pubdate
#: book.translate.xml:2693
#, fuzzy
msgid "Fall 1988"
msgstr "Outono de 1988"

#. (itstool) path: biblioentry/biblioset
#: book.translate.xml:2691
#, fuzzy
msgid "<citetitle>USENIX Computing Systems, 1, 4</citetitle> <_:pubdate-1/>"
msgstr ""
" <citetitle> USENIX Computing Systems, 1, 4 </citetitle> &lt;_: pubdate-1 /"
"&gt; "

#. (itstool) path: biblioentry/abbrev
#: book.translate.xml:2698
#, fuzzy
msgid "Tevanian, 1987"
msgstr "Tevanian, 1987"

#. (itstool) path: biblioentry/citetitle
#: book.translate.xml:2700
msgid ""
"Architecture-Independent Virtual Memory Management for Parallel and "
"Distributed Environments: The Mach Approach"
msgstr ""

#. (itstool) path: biblioentry/subtitle
#: book.translate.xml:2702
#, fuzzy
msgid "Technical Report CMU-CS-88-106,"
msgstr "Relatório Técnico CMU-CS-88-106,"

#. (itstool) path: publisher/publishername
#: book.translate.xml:2707
#, fuzzy
msgid "Department of Computer Science, Carnegie-Mellon University"
msgstr "Departamento de Ciência da Computação da Universidade Carnegie-Mellon"

#. (itstool) path: publisher/address
#: book.translate.xml:2710
#, no-wrap
msgid ""
"\n"
"\t  <city>Pittsburgh</city>\n"
"\t  <state>PA</state>\n"
"\t"
msgstr ""

#. (itstool) path: biblioentry/pubdate
#: book.translate.xml:2716
#, fuzzy
msgid "December 1987"
msgstr "Dezembro de 1987"
